{"ast":null,"code":"import { ACCESS_TOKEN } from '../common/constants';\n\nconst request = options => {\n  const headers = new Headers({\n    'Content-Type': 'application/json'\n  });\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  const defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n};\n\nexport function signup(signupRequest) {\n  return request({\n    url: 'http://localhost:8080/quizapp/api/signup',\n    method: 'POST',\n    body: JSON.stringify(signupRequest)\n  });\n}\nexport function login(loginRequest) {\n  return request({\n    url: 'http://localhost:8080/quizapp/api/login',\n    method: 'POST',\n    body: JSON.stringify(loginRequest)\n  });\n}\nexport function getCurrentUser() {\n  return request({\n    url: 'http://localhost:8080/quizapp/api/currentuser',\n    method: 'GET'\n  });\n}\nexport function validatNameAvailability(name) {\n  return request({\n    url: 'http://localhost:8080/quizapp/api/user?name=' + name,\n    method: 'GET'\n  });\n}\nexport function validatePasswordAvailability(password) {\n  return request({\n    url: 'http://localhost:8080/quizapp/api/user?password=' + password,\n    method: 'GET'\n  });\n}","map":{"version":3,"sources":["C:/Users/Albert/eclipse-workspace/QuizApp/quiz-app-frontend/src/api/Api.js"],"names":["ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","signup","signupRequest","method","body","JSON","stringify","login","loginRequest","getCurrentUser","validatNameAvailability","name","validatePasswordAvailability","password"],"mappings":"AAAA,SAASA,YAAT,QAA6B,qBAA7B;;AAMA,MAAMC,OAAO,GAAIC,OAAD,IAAa;AACzB,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxB,oBAAgB;AADQ,GAAZ,CAAhB;;AAIA,MAAGC,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAAH,EAAuC;AACnCG,IAAAA,OAAO,CAACI,MAAR,CAAe,eAAf,EAAgC,YAAYF,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAA5C;AACH;;AAED,QAAMQ,QAAQ,GAAG;AAACL,IAAAA,OAAO,EAAEA;AAAV,GAAjB;AACAD,EAAAA,OAAO,GAAGO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,QAAlB,EAA4BN,OAA5B,CAAV;AAEA,SAAOS,KAAK,CAACT,OAAO,CAACU,GAAT,EAAcV,OAAd,CAAL,CACNW,IADM,CACDC,QAAQ,IACVA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBE,IAAI,IAAI;AACzB,QAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;AACb,aAAOC,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACH;;AACD,WAAOA,IAAP;AACH,GALD,CAFG,CAAP;AASH,CArBD;;AAsBA,OAAO,SAASI,MAAT,CAAgBC,aAAhB,EAA+B;AAClC,SAAOnB,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAE,0CADM;AAEXS,IAAAA,MAAM,EAAE,MAFG;AAGXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,aAAf;AAHK,GAAD,CAAd;AAKH;AAED,OAAO,SAASK,KAAT,CAAeC,YAAf,EAA6B;AAChC,SAAOzB,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAE,yCADM;AAEXS,IAAAA,MAAM,EAAE,MAFG;AAGXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeE,YAAf;AAHK,GAAD,CAAd;AAKH;AAED,OAAO,SAASC,cAAT,GAA0B;AAC7B,SAAO1B,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAE,+CADM;AAEXS,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH;AAED,OAAO,SAASO,uBAAT,CAAiCC,IAAjC,EAAuC;AAC1C,SAAO5B,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAE,iDAA+CiB,IADzC;AAEXR,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH;AAED,OAAO,SAASS,4BAAT,CAAsCC,QAAtC,EAAgD;AACnD,SAAO9B,OAAO,CAAC;AACXW,IAAAA,GAAG,EAAE,qDAAmDmB,QAD7C;AAEXV,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH","sourcesContent":["import { ACCESS_TOKEN } from '../common/constants';\r\n\r\n\r\n\r\n\r\n\r\nconst request = (options) => {\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n    })\r\n    \r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n    .then(response => \r\n        response.json().then(json => {\r\n            if(!response.ok) {\r\n                return Promise.reject(json);\r\n            }\r\n            return json;\r\n        })\r\n    );\r\n};\r\nexport function signup(signupRequest) {\r\n    return request({\r\n        url: 'http://localhost:8080/quizapp/api/signup',\r\n        method: 'POST',\r\n        body: JSON.stringify(signupRequest)         \r\n    });\r\n}\r\n\r\nexport function login(loginRequest) {\r\n    return request({\r\n        url: 'http://localhost:8080/quizapp/api/login',\r\n        method: 'POST',\r\n        body: JSON.stringify(loginRequest)         \r\n    });\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    return request({\r\n        url: 'http://localhost:8080/quizapp/api/currentuser',\r\n        method: 'GET'             \r\n    });\r\n}\r\n\r\nexport function validatNameAvailability(name) {\r\n    return request({\r\n        url: 'http://localhost:8080/quizapp/api/user?name='+name,\r\n        method: 'GET'             \r\n    });\r\n}\r\n\r\nexport function validatePasswordAvailability(password) {\r\n    return request({\r\n        url: 'http://localhost:8080/quizapp/api/user?password='+password,\r\n        method: 'GET'             \r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}