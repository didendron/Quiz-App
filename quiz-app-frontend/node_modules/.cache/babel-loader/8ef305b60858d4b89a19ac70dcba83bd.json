{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nvar _jsxFileName = \"C:\\\\Users\\\\Albert\\\\eclipse-workspace\\\\QuizApp\\\\quiz-app-frontend\\\\src\\\\app\\\\App.js\";\nimport Layout, { Content } from 'antd/lib/layout/layout';\nimport { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport './App.css';\nimport '../common/AppHeader';\nimport Signup from '../user/signup/Signup';\nimport AppHeader from '../common/AppHeader';\nimport Login from '../user/login/Login';\nimport Api from '../api/Api';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n\n    _notification.config({\n      placement: 'topRight',\n      top: 100,\n      duration: 4\n    });\n  }\n\n  handleLogin() {\n    _notification.success({\n      message: 'Quiz App',\n      description: \"Jesteś zalogowany.\"\n    });\n\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  loadCurrentUser() {\n    Api.getCurrentUser().then(response => {\n      this.setState({\n        currentUser: response.data,\n        isAuthenticated: true\n      });\n    }).catch(error => {\n      this.setState({\n        isAuthenticated: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        isAuthenticated: this.state.isAuthenticated,\n        currentUser: this.state.currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        className: \"app-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              render: props => /*#__PURE__*/_jsxDEV(Login, {\n                onLogin: this.handleLogin,\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signup\",\n              component: Signup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Albert/eclipse-workspace/QuizApp/quiz-app-frontend/src/app/App.js"],"names":["Layout","Content","Component","Route","Switch","withRouter","Signup","AppHeader","Login","Api","App","constructor","props","state","currentUser","isAuthenticated","handleLogin","bind","loadCurrentUser","config","placement","top","duration","success","message","description","history","push","componentDidMount","getCurrentUser","then","response","setState","data","catch","error","render"],"mappings":";;;;AACA,OAAOA,MAAP,IAAiBC,OAAjB,QAAgC,wBAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAUC,KAAV,EAAiBC,MAAjB,EAAyBC,UAAzB,QAA2C,kBAA3C;AACA,OAAO,WAAP;AACA,OAAO,qBAAP;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAQC,GAAR,MAAkB,YAAlB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA2B;AACzBS,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,WAAW,EAAC,IADH;AAETC,MAAAA,eAAe,EAAC;AAFP,KAAX;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;;AAEA,kBAAaE,MAAb,CAAoB;AAClBC,MAAAA,SAAS,EAAC,UADQ;AAElBC,MAAAA,GAAG,EAAC,GAFc;AAGlBC,MAAAA,QAAQ,EAAC;AAHS,KAApB;AAKD;;AAEDN,EAAAA,WAAW,GAAG;AACZ,kBAAaO,OAAb,CAAqB;AACnBC,MAAAA,OAAO,EAAE,UADU;AAEnBC,MAAAA,WAAW,EAAE;AAFM,KAArB;;AAIA,SAAKP,eAAL;AACA,SAAKN,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKV,eAAL;AACD;;AAEDA,EAAAA,eAAe,GAAG;AAEhBT,IAAAA,GAAG,CAACoB,cAAJ,GACCC,IADD,CACMC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZlB,QAAAA,WAAW,EAAEiB,QAAQ,CAACE,IADV;AAEZlB,QAAAA,eAAe,EAAE;AAFL,OAAd;AAKD,KAPD,EAOGmB,KAPH,CAOSC,KAAK,IAAI;AAChB,WAAKH,QAAL,CAAc;AACZjB,QAAAA,eAAe,EAAE;AADL,OAAd;AAID,KAZD;AAaD;;AAGDqB,EAAAA,MAAM,GAAE;AACN,wBACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,eAAe,EAAE,KAAKvB,KAAL,CAAWE,eAAvC;AACA,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC;AADxB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,aAAnB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE,QAAC,MAAD;AAAA,oCAEA,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,QAAZ;AACM,cAAA,MAAM,EAAGF,KAAD,iBAAW,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAE,KAAKI,WAArB;AAAA,mBAAsCJ;AAAtC;AAAA;AAAA;AAAA;AAAA;AADzB;AAAA;AAAA;AAAA;AAAA,oBAFA,eAIA,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,SAAZ;AAAsB,cAAA,SAAS,EAAEN;AAAjC;AAAA;AAAA;AAAA;AAAA,oBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAxEwB;;AA4E3B,oBAAeD,UAAU,CAACK,GAAD,CAAzB","sourcesContent":["import { notification } from 'antd';\nimport Layout, { Content } from 'antd/lib/layout/layout';\nimport { Component } from 'react';\nimport {  Route, Switch, withRouter } from 'react-router-dom';\nimport './App.css';\nimport '../common/AppHeader';\nimport Signup from '../user/signup/Signup';\nimport AppHeader from '../common/AppHeader';\nimport Login from '../user/login/Login';\nimport  Api  from '../api/Api';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      currentUser:null,\n      isAuthenticated:false\n    }\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n\n    notification.config({\n      placement:'topRight',\n      top:100,\n      duration:4\n    })\n  }\n\n  handleLogin() {\n    notification.success({\n      message: 'Quiz App',\n      description: \"Jesteś zalogowany.\",\n    });\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  componentDidMount(){\n    this.loadCurrentUser();\n  }\n\n  loadCurrentUser() {\n    \n    Api.getCurrentUser()\n    .then(response => {\n      this.setState({\n        currentUser: response.data,\n        isAuthenticated: true,\n        \n      });\n    }).catch(error => {\n      this.setState({\n        isAuthenticated: false \n      });\n\n    });\n  }l\n\n\n  render(){\n    return(\n      <Layout className=\"app-container\">\n        <AppHeader isAuthenticated={this.state.isAuthenticated}\n        currentUser={this.state.currentUser}/>\n\n\n        <Content className=\"app-content\">\n          <div className=\"container\">\n            <Switch>\n\n            <Route path=\"/login\" \n                  render={(props) => <Login onLogin={this.handleLogin} {...props} />}></Route>\n            <Route path=\"/signup\" component={Signup}></Route>\n              \n            </Switch>\n          </div>\n        </Content>\n\n      </Layout>\n\n\n    );\n  }\n\n}\n\nexport default withRouter(App);"]},"metadata":{},"sourceType":"module"}