{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nvar _jsxFileName = \"C:\\\\Users\\\\Albert\\\\eclipse-workspace\\\\QuizApp\\\\quiz-app-frontend\\\\src\\\\quiz\\\\QuizList.js\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { getQuizzes } from \"../api/Api\";\nimport './QuizList.css';\n\nvar randomColor = require('randomcolor');\n\nclass QuizList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quizzes: []\n    };\n    this.loadQuizList = this.loadQuizList.bind(this);\n    this.loadQuiz = this.loadQuiz.bind(this);\n  }\n\n  loadQuizList() {\n    getQuizzes().then(response => {\n      const quizzes = this.state.quizzes.slice();\n      this.setState({\n        quizzes: quizzes.concat(response.quizData)\n      });\n    }).catch(error => {\n      _notification.error({\n        message: 'Quiz App',\n        description: error.message || 'Błąd!'\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadQuizList();\n  }\n\n  loadQuiz(event, quiz) {\n    event.preventDefault();\n    this.props.setQuiz(quiz);\n    this.props.history.push(\"/quiz\");\n  }\n\n  render() {\n    const quizViews = [];\n    this.state.quizzes.forEach((quiz, quizIndex) => {\n      quizViews.push( /*#__PURE__*/_jsxDEV(QuizView, {\n        quiz: quiz,\n        loadQuiz: this.loadQuiz\n      }, quizIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 28\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: quizViews\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction QuizView(props) {\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: \"/quiz\",\n    onClick: event => props.loadQuiz(event, props.quiz),\n    className: \"quiz-view\",\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      className: \"avatar\",\n      style: {\n        backgroundColor: randomColor()\n      },\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: [\"Tytu\\u0142 quizu:\", props.quiz.quiz]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"category\",\n      children: [\"Kategoria:\", props.quiz.category]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_c = QuizView;\nexport default _c2 = withRouter(QuizList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuizView\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Albert/eclipse-workspace/QuizApp/quiz-app-frontend/src/quiz/QuizList.js"],"names":["Avatar","Component","Link","withRouter","getQuizzes","randomColor","require","QuizList","constructor","props","state","quizzes","loadQuizList","bind","loadQuiz","then","response","slice","setState","concat","quizData","catch","error","message","description","componentDidMount","event","quiz","preventDefault","setQuiz","history","push","render","quizViews","forEach","quizIndex","QuizView","backgroundColor","category"],"mappings":"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","sourcesContent":["import { notification } from \"antd\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getQuizzes } from \"../api/Api\";\r\nimport './QuizList.css'\r\n\r\nvar randomColor = require('randomcolor');\r\n\r\nclass QuizList extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quizzes: []\r\n        };\r\n        this.loadQuizList=this.loadQuizList.bind(this);\r\n        this.loadQuiz=this.loadQuiz.bind(this);\r\n    }\r\n\r\n    loadQuizList(){\r\n        getQuizzes()\r\n        .then(response=>{\r\n            const quizzes=this.state.quizzes.slice();\r\n            this.setState({\r\n                quizzes:quizzes.concat(response.quizData)\r\n\r\n            });\r\n        }).catch(error=>{\r\n            notification.error({\r\n                message: 'Quiz App',\r\n                description: error.message || 'Błąd!'\r\n            });     \r\n        }\r\n\r\n        );\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadQuizList();\r\n    }\r\n\r\n    loadQuiz(event,quiz){\r\n        event.preventDefault();\r\n        this.props.setQuiz(quiz);\r\n\r\n        this.props.history.push(\"/quiz\");\r\n    }\r\n    \r\n    render(){\r\n        const quizViews=[];\r\n        this.state.quizzes.forEach((quiz,quizIndex)=>{\r\n            quizViews.push(<QuizView key={quizIndex} quiz={quiz} loadQuiz={this.loadQuiz}/>);\r\n        });\r\n\r\n        return(\r\n            <div className=\"quiz-container\">\r\n                {quizViews}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction QuizView(props){\r\n    return(\r\n        <Link to=\"/quiz\" onClick={(event) => props.loadQuiz(event, props.quiz)}  className=\"quiz-view\">\r\n            <Avatar className=\"avatar\" \r\n                style={{ backgroundColor: randomColor()}} >\r\n                Quiz\r\n            </Avatar>\r\n            <h1 className=\"title\">\r\n                Tytuł quizu:{props.quiz.quiz}\r\n            </h1>\r\n            <h3 className=\"category\">\r\n                Kategoria:{props.quiz.category}\r\n\r\n            </h3>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default withRouter(QuizList);"]},"metadata":{},"sourceType":"module"}