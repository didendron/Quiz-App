{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Albert\\\\eclipse-workspace\\\\QuizApp\\\\quiz-app-backend\\\\quiz-app-frontend\\\\src\\\\app\\\\App.js\";\nimport { notification } from 'antd';\nimport Layout, { Content } from 'antd/lib/layout/layout';\nimport { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport './App.css';\nimport '../common/AppHeader';\nimport Signup from '../user/signup/Signup';\nimport AppHeader from '../common/AppHeader';\nimport Login from '../user/login/Login';\nimport { getCurrentUser } from '../api/Api';\nimport { ACCESS_TOKEN } from '../common/constants';\nimport PrivateRoute from '../common/PrivateRoute';\nimport NewQuiz from '../quiz/NewQuiz';\nimport QuizList from '../quiz/QuizList';\nimport Quiz from '../quiz/Quiz';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    notification.config({\n      placement: 'topRight',\n      top: 100,\n      duration: 4\n    });\n  }\n\n  handleLogin() {\n    notification.success({\n      message: 'Quiz App',\n      description: \"Jesteś zalogowany.\"\n    });\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  handleLogout() {\n    localStorage.removeItem(ACCESS_TOKEN);\n    this.setState({\n      isAuthenticated: false,\n      currentUser: null\n    });\n    this.props.history.push(\"/\");\n    notification.success({\n      message: 'Quiz App',\n      description: \"Jesteś wylogowany.\"\n    });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  loadCurrentUser() {\n    getCurrentUser().then(response => {\n      console.log(response.name);\n      this.setState({\n        currentUser: response.name,\n        isAuthenticated: true\n      });\n      console.log(\"currentUser: \" + this.state.currentUser);\n    }).catch(error => {\n      this.setState({\n        isAuthenticated: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        isAuthenticated: this.state.isAuthenticated,\n        currentUser: this.state.currentUser,\n        onLogout: this.handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        className: \"app-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              render: props => /*#__PURE__*/_jsxDEV(QuizList, { ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/quiz\",\n              render: props => /*#__PURE__*/_jsxDEV(Quiz, { ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              render: props => /*#__PURE__*/_jsxDEV(Login, {\n                onLogin: this.handleLogin,\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signup\",\n              component: Signup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              authenticated: this.state.isAuthenticated,\n              path: \"/new\",\n              component: NewQuiz,\n              handleLogout: this.handleLogout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Albert/eclipse-workspace/QuizApp/quiz-app-backend/quiz-app-frontend/src/app/App.js"],"names":["notification","Layout","Content","Component","Route","Switch","withRouter","Signup","AppHeader","Login","getCurrentUser","ACCESS_TOKEN","PrivateRoute","NewQuiz","QuizList","Quiz","App","constructor","props","state","currentUser","isAuthenticated","handleLogin","bind","handleLogout","loadCurrentUser","config","placement","top","duration","success","message","description","history","push","localStorage","removeItem","setState","componentDidMount","then","response","console","log","name","catch","error","render"],"mappings":"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","sourcesContent":["import { notification } from 'antd';\nimport Layout, { Content } from 'antd/lib/layout/layout';\nimport { Component } from 'react';\nimport {  Route, Switch, withRouter } from 'react-router-dom';\nimport './App.css';\nimport '../common/AppHeader';\nimport Signup from '../user/signup/Signup';\nimport AppHeader from '../common/AppHeader';\nimport Login from '../user/login/Login';\nimport  {getCurrentUser}  from '../api/Api';\nimport { ACCESS_TOKEN } from '../common/constants';\nimport PrivateRoute from '../common/PrivateRoute';\nimport NewQuiz from '../quiz/NewQuiz';\nimport QuizList from '../quiz/QuizList';\nimport Quiz from '../quiz/Quiz';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      currentUser:null,\n      isAuthenticated:false,\n      \n   }\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    \n\n    notification.config({\n      placement:'topRight',\n      top:100,\n      duration:4\n    })\n  }\n\n  handleLogin() {\n    notification.success({\n      message: 'Quiz App',\n      description: \"Jesteś zalogowany.\",\n    });\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  handleLogout() {\n    localStorage.removeItem(ACCESS_TOKEN)\n    this.setState({\n      isAuthenticated:false,\n      currentUser:null\n\n    })\n\n    this.props.history.push(\"/\");\n    notification.success({\n          message: 'Quiz App',\n          description: \"Jesteś wylogowany.\",\n    });\n\n  }\n\n\n  componentDidMount(){\n    this.loadCurrentUser();\n  }\n\n  loadCurrentUser() {\n    \n    getCurrentUser()\n    .then(response => {\n      console.log(response.name);\n      this.setState({\n        currentUser: response.name,\n        isAuthenticated: true,\n        \n      });\n      console.log(\"currentUser: \"+this.state.currentUser);\n    }).catch(error => {\n      this.setState({\n        isAuthenticated: false \n      });\n\n    });\n  }\n  \n\n\n  render(){\n    return(\n      <Layout className=\"app-container\">\n        <AppHeader isAuthenticated={this.state.isAuthenticated}\n        currentUser={this.state.currentUser}\n        onLogout={this.handleLogout}/>\n\n\n        <Content className=\"app-content\">\n          <div className=\"container\">\n            <Switch>\n            <Route exact path=\"/\" \n                  render={(props) => <QuizList  {...props} />}>\n            </Route>\n            <Route path=\"/quiz\" \n                  render={(props) => <Quiz  {...props} />}></Route>\n\n            <Route path=\"/login\" \n                  render={(props) => <Login onLogin={this.handleLogin} {...props} />}></Route>\n            <Route path=\"/signup\" component={Signup}></Route>\n            <PrivateRoute authenticated={this.state.isAuthenticated} path=\"/new\" component={NewQuiz} handleLogout={this.handleLogout}></PrivateRoute>\n              \n            </Switch>\n          </div>\n        </Content>\n\n      </Layout>\n\n\n    );\n  }\n\n}\n\nexport default withRouter(App);"]},"metadata":{},"sourceType":"module"}