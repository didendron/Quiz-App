{"ast":null,"code":"import{ACCESS_TOKEN}from'../common/constants';var request=function request(options){var headers=new Headers({'Content-Type':'application/json'});if(localStorage.getItem(ACCESS_TOKEN)){headers.append('Authorization','Bearer '+localStorage.getItem(ACCESS_TOKEN));}var defaults={headers:headers};options=Object.assign({},defaults,options);return fetch(options.url,options).then(function(response){return response.json().then(function(json){if(!response.ok){return Promise.reject(json);}return json;});});};export function signup(signupRequest){return request({url:'http://localhost:8080/api/signup',method:'POST',body:JSON.stringify(signupRequest)});}export function login(loginRequest){return request({url:'http://localhost:8080/api/login',method:'POST',body:JSON.stringify(loginRequest)});}export function getCurrentUser(){return request({url:'http://localhost:8080/api/currentuser',method:'GET'});}export function validatNameAvailability(name){return request({url:'http://localhost:8080/api/username?name='+name,method:'GET'});}export function validatePasswordAvailability(password){return request({url:'http://localhost:8080/api/userpassword?password='+password,method:'GET'});}export function createQuiz(quizData){return request({url:'http://localhost:8080/api/createquiz',method:'POST',body:JSON.stringify(quizData)});}export function getQuizzes(){return request({url:'http://localhost:8080/api/getquiz',method:'GET'});}","map":{"version":3,"sources":["C:/Users/Albert/eclipse-workspace/QuizApp/quiz-app-backend/quiz-app-frontend/src/api/Api.js"],"names":["ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","signup","signupRequest","method","body","JSON","stringify","login","loginRequest","getCurrentUser","validatNameAvailability","name","validatePasswordAvailability","password","createQuiz","quizData","getQuizzes"],"mappings":"AAAA,OAASA,YAAT,KAA6B,qBAA7B,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,OAAD,CAAa,CACzB,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY,CACxB,eAAgB,kBADQ,CAAZ,CAAhB,CAIA,GAAGC,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAAH,CAAuC,CACnCG,OAAO,CAACI,MAAR,CAAe,eAAf,CAAgC,UAAYF,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAA5C,EACH,CAED,GAAMQ,CAAAA,QAAQ,CAAG,CAACL,OAAO,CAAEA,OAAV,CAAjB,CACAD,OAAO,CAAGO,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBF,QAAlB,CAA4BN,OAA5B,CAAV,CAEA,MAAOS,CAAAA,KAAK,CAACT,OAAO,CAACU,GAAT,CAAcV,OAAd,CAAL,CACNW,IADM,CACD,SAAAC,QAAQ,QACVA,CAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,SAAAE,IAAI,CAAI,CACzB,GAAG,CAACD,QAAQ,CAACE,EAAb,CAAiB,CACb,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP,CACH,CACD,MAAOA,CAAAA,IAAP,CACH,CALD,CADU,EADP,CAAP,CASH,CArBD,CAsBA,MAAO,SAASI,CAAAA,MAAT,CAAgBC,aAAhB,CAA+B,CAClC,MAAOnB,CAAAA,OAAO,CAAC,CACXW,GAAG,CAAE,kCADM,CAEXS,MAAM,CAAE,MAFG,CAGXC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,aAAf,CAHK,CAAD,CAAd,CAKH,CAED,MAAO,SAASK,CAAAA,KAAT,CAAeC,YAAf,CAA6B,CAChC,MAAOzB,CAAAA,OAAO,CAAC,CACXW,GAAG,CAAE,iCADM,CAEXS,MAAM,CAAE,MAFG,CAGXC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeE,YAAf,CAHK,CAAD,CAAd,CAKH,CAED,MAAO,SAASC,CAAAA,cAAT,EAA0B,CAC7B,MAAO1B,CAAAA,OAAO,CAAC,CACXW,GAAG,CAAE,uCADM,CAEXS,MAAM,CAAE,KAFG,CAAD,CAAd,CAIH,CAED,MAAO,SAASO,CAAAA,uBAAT,CAAiCC,IAAjC,CAAuC,CAC1C,MAAO5B,CAAAA,OAAO,CAAC,CACXW,GAAG,CAAE,2CAA2CiB,IADrC,CAEXR,MAAM,CAAE,KAFG,CAAD,CAAd,CAIH,CAED,MAAO,SAASS,CAAAA,4BAAT,CAAsCC,QAAtC,CAAgD,CACnD,MAAO9B,CAAAA,OAAO,CAAC,CACXW,GAAG,CAAE,mDAAmDmB,QAD7C,CAEXV,MAAM,CAAE,KAFG,CAAD,CAAd,CAIH,CAED,MAAO,SAASW,CAAAA,UAAT,CAAoBC,QAApB,CAA8B,CACjC,MAAOhC,CAAAA,OAAO,CAAC,CACXW,GAAG,CAAE,sCADM,CAEXS,MAAM,CAAE,MAFG,CAGXC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeS,QAAf,CAHK,CAAD,CAAd,CAKH,CAED,MAAO,SAASC,CAAAA,UAAT,EAAsB,CACzB,MAAOjC,CAAAA,OAAO,CAAC,CACXW,GAAG,CAAE,mCADM,CAEXS,MAAM,CAAE,KAFG,CAAD,CAAd,CAIH","sourcesContent":["import { ACCESS_TOKEN } from '../common/constants';\r\n\r\n\r\n\r\n\r\n\r\nconst request = (options) => {\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n    })\r\n    \r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n    .then(response => \r\n        response.json().then(json => {\r\n            if(!response.ok) {\r\n                return Promise.reject(json);\r\n            }\r\n            return json;\r\n        })\r\n    );\r\n};\r\nexport function signup(signupRequest) {\r\n    return request({\r\n        url: 'http://localhost:8080/api/signup',\r\n        method: 'POST',\r\n        body: JSON.stringify(signupRequest)         \r\n    });\r\n}\r\n\r\nexport function login(loginRequest) {\r\n    return request({\r\n        url: 'http://localhost:8080/api/login',\r\n        method: 'POST',\r\n        body: JSON.stringify(loginRequest)         \r\n    });\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    return request({\r\n        url: 'http://localhost:8080/api/currentuser',\r\n        method: 'GET'             \r\n    });\r\n}\r\n\r\nexport function validatNameAvailability(name) {\r\n    return request({\r\n        url: 'http://localhost:8080/api/username?name='+name,\r\n        method: 'GET'             \r\n    });\r\n}\r\n\r\nexport function validatePasswordAvailability(password) {\r\n    return request({\r\n        url: 'http://localhost:8080/api/userpassword?password='+password,\r\n        method: 'GET'             \r\n    });\r\n}\r\n\r\nexport function createQuiz(quizData) {\r\n    return request({\r\n        url: 'http://localhost:8080/api/createquiz',\r\n        method: 'POST',\r\n        body: JSON.stringify(quizData)         \r\n    });\r\n}\r\n\r\nexport function getQuizzes() {\r\n    return request({\r\n        url: 'http://localhost:8080/api/getquiz',\r\n        method: 'GET'             \r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}