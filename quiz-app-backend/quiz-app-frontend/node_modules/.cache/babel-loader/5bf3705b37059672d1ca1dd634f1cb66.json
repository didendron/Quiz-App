{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nvar _jsxFileName = \"C:\\\\Users\\\\Albert\\\\eclipse-workspace\\\\QuizApp\\\\quiz-app-frontend\\\\src\\\\quiz\\\\NewQuiz.js\";\nimport { CloseOutlined, PlusOutlined } from '@ant-design/icons';\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { Component } from \"react\";\nimport { QUIZ_CHOICE_MAX_LENGTH, QUIZ_MAX_CHOICES, QUIZ_NAME_MAX_LENGTH, QUIZ_QUESTION_MAX_LENGTH } from \"../common/constants\";\nimport './NewQuiz.css';\nimport { createQuiz } from \"../api/Api\";\n\nclass NewQuiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateQuizName = value => {\n      if (value.length === 0) {\n        return {\n          validateStatus: 'error',\n          errorMsg: 'Wpisz nazwę quizu!'\n        };\n      } else if (value.length > QUIZ_NAME_MAX_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Nazwa quizu za długa (Maksymalnie ${QUIZ_NAME_MAX_LENGTH} znaków dozwolone)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.validateQuestion = value => {\n      if (value.length === 0) {\n        return {\n          validateStatus: 'error',\n          errorMsg: 'Wpisz pytanie!'\n        };\n      } else if (value.length > QUIZ_QUESTION_MAX_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Pytanie za długie (Maksymalnie ${QUIZ_QUESTION_MAX_LENGTH} znaków dozwolone)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.validateChoice = value => {\n      if (value.length === 0) {\n        return {\n          validateStatus: 'error',\n          errorMsg: 'Wpisz odpowiedź!'\n        };\n      } else if (value.length > QUIZ_CHOICE_MAX_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Odpowiedź (Maksymalnie ${QUIZ_CHOICE_MAX_LENGTH} znaków dozwolone)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.state = {\n      quiz: {\n        text: ''\n      },\n      category: {\n        text: ''\n      },\n      questions: [{\n        question: {\n          text: ''\n        },\n        choices: [{\n          text: ''\n        }, {\n          text: ''\n        }, {\n          text: ''\n        }, {\n          text: ''\n        }],\n        correctChoice: {\n          text: ''\n        }\n      }]\n    };\n    this.handleQuizChange = this.handleQuizChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCategoryChange = this.handleCategoryChange.bind(this);\n    this.addChoice = this.addChoice.bind(this);\n    this.removeQuestion = this.removeQuestion.bind(this);\n    this.handleQuestionChange = this.handleQuestionChange.bind(this);\n    this.handleChoiceChange = this.handleChoiceChange.bind(this);\n    this.handleRadioChange = this.handleRadioChange.bind(this);\n    this.isFormInvalid = this.isFormInvalid.bind(this);\n  }\n\n  addChoice(event) {\n    const questions = this.state.questions.slice();\n    this.setState({\n      questions: questions.concat([{\n        question: {\n          text: ''\n        },\n        choices: [{\n          text: ''\n        }, {\n          text: ''\n        }, {\n          text: ''\n        }, {\n          text: ''\n        }],\n        correctChoice: {\n          text: ''\n        }\n      }])\n    });\n  }\n\n  removeQuestion(questionNumber) {\n    const questions = this.state.questions.slice();\n    this.setState({\n      questions: [...questions.slice(0, questionNumber), ...questions.slice(questionNumber + 1)]\n    });\n  }\n\n  handleQuizChange(event) {\n    const value = event.target.value;\n    this.setState({\n      quiz: {\n        text: value,\n        ...this.validateQuizName(value)\n      }\n    });\n  }\n\n  handleCategoryChange(value) {\n    this.setState({\n      category: {\n        text: value\n      }\n    });\n  }\n\n  handleQuestionChange(event, index) {\n    const value = event.target.value;\n    this.setState(state => {\n      let newState = JSON.parse(JSON.stringify(state));\n      newState.questions[index].question.text = value;\n      newState.questions[index].question.validateStatus = this.validateQuestion(value).validateStatus;\n      newState.questions[index].question.errorMsg = this.validateQuestion(value).errorMsg;\n      return {\n        questions: newState.questions\n      };\n    });\n  }\n\n  handleChoiceChange(event, index, indexQuestion) {\n    const value = event.target.value;\n    this.setState(state => {\n      let newState = JSON.parse(JSON.stringify(state));\n      newState.questions[indexQuestion].choices[index].text = value;\n      newState.questions[indexQuestion].choices[index].validateStatus = this.validateChoice(value).validateStatus;\n      newState.questions[indexQuestion].choices[index].errorMsg = this.validateChoice(value).errorMsg;\n      return {\n        questions: newState.questions\n      };\n    });\n  }\n\n  handleRadioChange(event, index) {\n    const value = event.target.value;\n    const val = this.state.questions[index].choices[value - 1].text;\n    console.log(val);\n    this.setState(state => {\n      let newState = JSON.parse(JSON.stringify(state));\n      newState.questions[index].correctChoice.text = val;\n      return {\n        questions: newState.questions\n      };\n    });\n  }\n\n  isFormInvalid() {\n    if (this.state.quiz.validateStatus !== 'success') {\n      return true;\n    }\n\n    for (let i = 0; i < this.state.questions.length; i++) {\n      const question = this.state.questions[i].question;\n\n      if (question.validateStatus !== 'success') {\n        return true;\n      }\n    }\n\n    for (let i = 0; i < this.state.questions.length; i++) {\n      const choices = this.state.questions[i].choices;\n\n      for (let i = 0; i < choices.length; i++) {\n        if (choices[i].validateStatus !== 'success') {\n          return true;\n        }\n      }\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const quizData = {\n      quiz: this.state.quiz.text,\n      category: this.state.category.text,\n      questions: this.state.questions\n    };\n    console.log(JSON.stringify(quizData));\n    createQuiz(quizData).then(response => {\n      this.props.history.push(\"/\");\n    }).catch(error => {\n      if (error.status === 401) {\n        this.props.handleLogout();\n      } else {\n        _notification.error({\n          message: 'Quiz App',\n          description: error.message || 'Błąd'\n        });\n      }\n    });\n  }\n\n  render() {\n    const questionViews = [];\n    this.state.questions.forEach((question, index) => {\n      questionViews.push( /*#__PURE__*/_jsxDEV(QuizQuestion, {\n        question: question,\n        questionNumber: index,\n        removeQuestion: this.removeQuestion,\n        handleQuestionChange: this.handleQuestionChange,\n        handleChoiceChange: this.handleChoiceChange,\n        handleRadioChange: this.handleRadioChange\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 32\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Nowy Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-quiz-content\",\n        children: /*#__PURE__*/_jsxDEV(_Form, {\n          onSubmit: this.handleSubmit,\n          className: \"new-quiz-form\",\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            validateStatus: this.state.quiz.validateStatus,\n            help: this.state.quiz.errorMsg,\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              placeholder: \"Wprowad\\u017A nazw\\u0119 quizu\",\n              style: {\n                fontSize: '16px'\n              },\n              autosize: {\n                minRows: 3,\n                maxRows: 6\n              },\n              name: \"quiz\",\n              value: this.state.quiz.text,\n              onChange: this.handleQuizChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            className: \"form-row\",\n            children: [\"Kategoria:\", /*#__PURE__*/_jsxDEV(_Select, {\n              name: \"categories\",\n              defaultValue: \"geografia\",\n              value: this.state.category.text,\n              onChange: this.handleCategoryChange,\n              style: {\n                width: 150\n              },\n              children: [/*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"geografia\",\n                children: \"geografia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"j\\u0119zyk\",\n                children: \"j\\u0119zyk\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"historia\",\n                children: \"historia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"przyroda\",\n                children: \"przyroda\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"filmy\",\n                children: \"filmy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"ksi\\u0105\\u017Cki\",\n                children: \"ksi\\u0105\\u017Cki\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"wiedza og\\xF3lna\",\n                children: \"wiedza og\\xF3lna\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"matematyka\",\n                children: \"matematyka\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Divider, {\n            className: \"line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this), questionViews, /*#__PURE__*/_jsxDEV(_Form.Item, {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"dashed\",\n              onClick: this.addChoice,\n              disabled: this.state.questions.length === QUIZ_MAX_CHOICES,\n              children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 33\n              }, this), \" Dodaj pytanie\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              size: \"large\",\n              disabled: this.isFormInvalid(),\n              onClick: this.handleSubmit,\n              className: \"create-quiz-button\",\n              children: \"Utw\\xF3rz quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction QuizQuestion(props) {\n  const choiceViews = [];\n  props.question.choices.forEach((choice, index) => {\n    choiceViews.push( /*#__PURE__*/_jsxDEV(QuizChoice, {\n      choice: choice,\n      choiceNumber: index,\n      questionNumber: props.questionNumber,\n      handleChoiceChange: props.handleChoiceChange\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 26\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(_Form.Item, {\n    validateStatus: props.question.question.validateStatus,\n    help: props.question.question.errorMsg,\n    className: \"form-row\",\n    children: [/*#__PURE__*/_jsxDEV(TextArea, {\n      placeholder: 'Pytanie ' + (props.questionNumber + 1),\n      style: {\n        fontSize: '16px'\n      },\n      autosize: {\n        minRows: 2,\n        maxRows: 4\n      },\n      name: \"question\",\n      value: props.question.question.text,\n      onChange: event => props.handleQuestionChange(event, props.questionNumber)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }, this), props.questionNumber > 0 ? /*#__PURE__*/_jsxDEV(CloseOutlined, {\n      className: \"dynamic-delete-button\",\n      disabled: props.questionNumber < 1,\n      onClick: () => props.removeQuestion(props.questionNumber)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 17\n    }, this) : null, choiceViews, /*#__PURE__*/_jsxDEV(_Form.Item, {\n      className: \"form-row\",\n      children: [\"Poprawna odpowied\\u017A:\", /*#__PURE__*/_jsxDEV(_Radio.Group, {\n        onChange: event => props.handleRadioChange(event, props.questionNumber),\n        children: [/*#__PURE__*/_jsxDEV(_Radio, {\n          value: 1,\n          children: \"Odp.1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Radio, {\n          value: 2,\n          children: \"Odp.2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Radio, {\n          value: 3,\n          children: \"Odp.3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Radio, {\n          value: 4,\n          children: \"Odp.4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 9\n  }, this);\n}\n\n_c = QuizQuestion;\n\nfunction QuizChoice(props) {\n  return /*#__PURE__*/_jsxDEV(_Form.Item, {\n    validateStatus: props.choice.validateStatus,\n    help: props.choice.errorMsg,\n    className: \"form-row\",\n    children: /*#__PURE__*/_jsxDEV(_Input, {\n      placeholder: 'Odpowiedź ' + (props.choiceNumber + 1),\n      size: \"large\",\n      value: props.choice.text,\n      onChange: event => props.handleChoiceChange(event, props.choiceNumber, props.questionNumber)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 401,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = QuizChoice;\nexport default NewQuiz;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuizQuestion\");\n$RefreshReg$(_c2, \"QuizChoice\");","map":{"version":3,"sources":["C:/Users/Albert/eclipse-workspace/QuizApp/quiz-app-frontend/src/quiz/NewQuiz.js"],"names":["CloseOutlined","PlusOutlined","TextArea","Component","QUIZ_CHOICE_MAX_LENGTH","QUIZ_MAX_CHOICES","QUIZ_NAME_MAX_LENGTH","QUIZ_QUESTION_MAX_LENGTH","createQuiz","NewQuiz","constructor","props","validateQuizName","value","length","validateStatus","errorMsg","validateQuestion","validateChoice","state","quiz","text","category","questions","question","choices","correctChoice","handleQuizChange","bind","handleSubmit","handleCategoryChange","addChoice","removeQuestion","handleQuestionChange","handleChoiceChange","handleRadioChange","isFormInvalid","event","slice","setState","concat","questionNumber","target","index","newState","JSON","parse","stringify","indexQuestion","val","console","log","i","preventDefault","quizData","then","response","history","push","catch","error","status","handleLogout","message","description","render","questionViews","forEach","fontSize","minRows","maxRows","width","QuizQuestion","choiceViews","choice","QuizChoice","choiceNumber"],"mappings":"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","sourcesContent":["\r\nimport { Button, Divider, Form, Input, notification, Radio, Select } from \"antd\";\r\nimport  {CloseOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\nimport { Component } from \"react\";\r\nimport { QUIZ_CHOICE_MAX_LENGTH, QUIZ_MAX_CHOICES, QUIZ_NAME_MAX_LENGTH, QUIZ_QUESTION_MAX_LENGTH } from \"../common/constants\";\r\nimport './NewQuiz.css';  \r\nimport { createQuiz } from \"../api/Api\";\r\n\r\n\r\n\r\nclass NewQuiz extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            quiz:{\r\n                text:''\r\n            },\r\n            category:{\r\n                text:''\r\n            },\r\n            questions:[{\r\n                question:{\r\n                    text:''\r\n                },\r\n                choices: [{\r\n                    text: ''\r\n                }, {\r\n                    text: ''\r\n                },\r\n                {\r\n                    text: ''\r\n                },\r\n                {\r\n                    text: ''\r\n                }],\r\n                correctChoice:{\r\n                    text:''\r\n                }\r\n            }]\r\n            \r\n           \r\n\r\n        }\r\n\r\n    this.handleQuizChange=this.handleQuizChange.bind(this);\r\n    this.handleSubmit=this.handleSubmit.bind(this);\r\n    this.handleCategoryChange=this.handleCategoryChange.bind(this);\r\n    this.addChoice=this.addChoice.bind(this);\r\n    this.removeQuestion=this.removeQuestion.bind(this);\r\n    this.handleQuestionChange=this.handleQuestionChange.bind(this);\r\n    this.handleChoiceChange=this.handleChoiceChange.bind(this);\r\n    this.handleRadioChange=this.handleRadioChange.bind(this);\r\n    this.isFormInvalid = this.isFormInvalid.bind(this);\r\n\r\n\r\n    }\r\n\r\n    addChoice(event){\r\n        const questions = this.state.questions.slice();\r\n        this.setState({\r\n            questions:questions.concat([{\r\n                question:{\r\n                    text:''\r\n                },\r\n                choices: [{\r\n                    text: ''\r\n                }, {\r\n                    text: ''\r\n                },\r\n                {\r\n                    text: ''\r\n                },\r\n                {\r\n                    text: ''\r\n                }],\r\n                correctChoice:{\r\n                    text:''\r\n                }\r\n            }])\r\n        }); \r\n    }\r\n    removeQuestion(questionNumber){\r\n        const questions = this.state.questions.slice();\r\n        this.setState({\r\n            questions:[...questions.slice(0,questionNumber),...questions.slice(questionNumber+1)]\r\n        });\r\n    }\r\n\r\n    handleQuizChange(event){\r\n        const value=event.target.value;\r\n        this.setState({\r\n            quiz:{\r\n                text:value,\r\n                ...this.validateQuizName(value)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    validateQuizName=(value)=>{\r\n        if(value.length === 0) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Wpisz nazwę quizu!'\r\n            }\r\n        } else if (value.length > QUIZ_NAME_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Nazwa quizu za długa (Maksymalnie ${QUIZ_NAME_MAX_LENGTH} znaków dozwolone)`\r\n            }    \r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCategoryChange(value){\r\n        this.setState({\r\n            category:{\r\n                text:value\r\n            }\r\n        });\r\n    }\r\n\r\n    handleQuestionChange(event,index){\r\n        const value = event.target.value;\r\n\r\n\r\n        this.setState((state)=>{\r\n            let newState=JSON.parse(JSON.stringify(state));\r\n            newState.questions[index].question.text=value;\r\n            newState.questions[index].question.validateStatus=this.validateQuestion(value).validateStatus;\r\n            newState.questions[index].question.errorMsg=this.validateQuestion(value).errorMsg;\r\n\r\n            return({\r\n                questions:newState.questions\r\n            });\r\n\r\n        }   \r\n        );\r\n\r\n    }\r\n    validateQuestion=(value)=>{\r\n        if(value.length === 0) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Wpisz pytanie!'\r\n            }\r\n        } else if (value.length > QUIZ_QUESTION_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Pytanie za długie (Maksymalnie ${QUIZ_QUESTION_MAX_LENGTH} znaków dozwolone)`\r\n            }    \r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChoiceChange(event,index,indexQuestion){\r\n        \r\n        \r\n        const value = event.target.value;\r\n\r\n\r\n        this.setState((state)=>{\r\n            let newState=JSON.parse(JSON.stringify(state));\r\n            newState.questions[indexQuestion].choices[index].text=value;\r\n            newState.questions[indexQuestion].choices[index].validateStatus=this.validateChoice(value).validateStatus;\r\n            newState.questions[indexQuestion].choices[index].errorMsg=this.validateChoice(value).errorMsg;\r\n\r\n            return({\r\n                questions:newState.questions\r\n            });\r\n\r\n        }   \r\n        );\r\n    }\r\n\r\n  \r\n  \r\n  \r\n\r\n    validateChoice=(value)=>{\r\n        if(value.length === 0) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Wpisz odpowiedź!'\r\n            }\r\n        } else if (value.length > QUIZ_CHOICE_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Odpowiedź (Maksymalnie ${QUIZ_CHOICE_MAX_LENGTH} znaków dozwolone)`\r\n            }    \r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null\r\n            }\r\n        }\r\n    }\r\n\r\n    handleRadioChange(event,index){\r\n        const value = event.target.value;\r\n        \r\n        const val=this.state.questions[index].choices[value-1].text;\r\n        console.log(val);\r\n\r\n        this.setState((state)=>{\r\n            let newState=JSON.parse(JSON.stringify(state));\r\n            newState.questions[index].correctChoice.text=val;\r\n\r\n            return({\r\n                questions:newState.questions\r\n            });\r\n\r\n        }   \r\n        );\r\n    }\r\n\r\n    isFormInvalid(){\r\n        if(this.state.quiz.validateStatus !== 'success') {\r\n            return true;\r\n        }\r\n        \r\n    \r\n        for(let i = 0; i < this.state.questions.length; i++) {\r\n            const question = this.state.questions[i].question;            \r\n            if(question.validateStatus !== 'success') {\r\n                return true;\r\n            }\r\n        }\r\n        for(let i = 0; i < this.state.questions.length; i++) {\r\n            const choices = this.state.questions[i].choices; \r\n            for(let i=0;i<choices.length;i++) {\r\n                if(choices[i].validateStatus !== 'success') {\r\n                return true;\r\n            }\r\n            }          \r\n            \r\n        }\r\n    } \r\n\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        const quizData={\r\n            quiz:this.state.quiz.text,\r\n            category:this.state.category.text,\r\n            questions:this.state.questions\r\n\r\n        }\r\n        console.log(JSON.stringify(quizData));\r\n        createQuiz(quizData)\r\n        .then(response => {\r\n            this.props.history.push(\"/\");\r\n        }).catch(error => {\r\n            if(error.status === 401) {\r\n                this.props.handleLogout();    \r\n            } else {\r\n                notification.error({\r\n                    message: 'Quiz App',\r\n                    description: error.message || 'Błąd'\r\n                });              \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const questionViews=[];\r\n        this.state.questions.forEach((question,index)=>{\r\n            questionViews.push(<QuizQuestion  key={index} question={question} questionNumber={index}\r\n             removeQuestion={this.removeQuestion} handleQuestionChange={this.handleQuestionChange}\r\n            handleChoiceChange={this.handleChoiceChange} handleRadioChange={this.handleRadioChange} />);\r\n        });\r\n\r\n        return(\r\n            <div className=\"new-quiz-container\">\r\n                <h1 className=\"title\">Nowy Quiz</h1>\r\n                <div className=\"new-quiz-content\">\r\n                    <Form onSubmit={this.handleSubmit} className=\"new-quiz-form\">\r\n                        <Form.Item validateStatus={this.state.quiz.validateStatus}\r\n                        help={this.state.quiz.errorMsg} className=\"form-row\">\r\n                            <TextArea\r\n                            placeholder=\"Wprowadź nazwę quizu\"\r\n                            style = {{ fontSize: '16px' }} \r\n                            autosize={{ minRows: 3, maxRows: 6 }} \r\n                            name = \"quiz\"\r\n                            value = {this.state.quiz.text}\r\n                            onChange = {this.handleQuizChange}/>\r\n                        </Form.Item>\r\n                        <Form.Item className=\"form-row\">\r\n                            \r\n                            Kategoria:<Select name=\"categories\"\r\n                            defaultValue=\"geografia\"\r\n                            value={this.state.category.text}\r\n                            onChange={this.handleCategoryChange}\r\n                            style={{width:150}}>\r\n                                <Select.Option value=\"geografia\">geografia</Select.Option>\r\n                                <Select.Option value=\"język\">język</Select.Option>\r\n                                <Select.Option value=\"historia\">historia</Select.Option>\r\n                                <Select.Option value=\"przyroda\">przyroda</Select.Option>\r\n                                <Select.Option value=\"filmy\">filmy</Select.Option>\r\n                                <Select.Option value=\"książki\">książki</Select.Option>\r\n                                <Select.Option value=\"wiedza ogólna\">wiedza ogólna</Select.Option>\r\n                                <Select.Option value=\"matematyka\">matematyka</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>    \r\n                        <Divider className=\"line\"/>\r\n                        {questionViews}\r\n\r\n                        <Form.Item className=\"form-row\">\r\n                            <Button type=\"dashed\" onClick={this.addChoice} disabled={this.state.questions.length === QUIZ_MAX_CHOICES}>\r\n                                <PlusOutlined /> Dodaj pytanie\r\n                            </Button>\r\n                        </Form.Item>\r\n\r\n                        \r\n                        <Form.Item className=\"form-row\">\r\n                            <Button type=\"primary\" \r\n                                htmlType=\"submit\" \r\n                                size=\"large\" \r\n                                disabled={this.isFormInvalid()}\r\n                                onClick={this.handleSubmit}\r\n                                className=\"create-quiz-button\">Utwórz quiz</Button>\r\n                        </Form.Item>\r\n                       \r\n\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction QuizQuestion(props){\r\n    const choiceViews=[];\r\n    props.question.choices.forEach((choice,index)=>{\r\n        choiceViews.push(<QuizChoice  key={index} choice={choice} choiceNumber={index}\r\n        questionNumber={props.questionNumber}\r\n         handleChoiceChange={props.handleChoiceChange} />);\r\n    });\r\n   \r\n    return(\r\n        <Form.Item validateStatus={props.question.question.validateStatus}\r\n        help={props.question.question.errorMsg} className=\"form-row\">\r\n            <TextArea\r\n                placeholder={'Pytanie ' + (props.questionNumber + 1)}\r\n                style = {{ fontSize: '16px' }} \r\n                autosize={{ minRows: 2, maxRows: 4 }} \r\n                name = \"question\"\r\n                value = {props.question.question.text} \r\n                onChange={(event)=>props.handleQuestionChange(event,props.questionNumber)}/>\r\n            \r\n\r\n            {\r\n                props.questionNumber > 0 ? (\r\n                <CloseOutlined\r\n                    className=\"dynamic-delete-button\"\r\n                    disabled={props.questionNumber < 1}\r\n                    onClick={() => props.removeQuestion(props.questionNumber)}\r\n                /> ): null\r\n            } \r\n            \r\n            {choiceViews}\r\n            <Form.Item  className=\"form-row\">\r\n                Poprawna odpowiedź:<Radio.Group onChange={(event)=>props.handleRadioChange(event,props.questionNumber)} \r\n                >\r\n                    <Radio value={1}>Odp.1</Radio>\r\n                    <Radio value={2}>Odp.2</Radio>\r\n                    <Radio value={3}>Odp.3</Radio>\r\n                    <Radio value={4}>Odp.4</Radio>\r\n                </Radio.Group>\r\n\r\n            </Form.Item>\r\n      \r\n    \r\n        </Form.Item>  \r\n        \r\n\r\n    );\r\n}\r\n\r\nfunction QuizChoice(props){\r\n\r\n    \r\n\r\n    return(\r\n        <Form.Item validateStatus={props.choice.validateStatus}\r\n        help={props.choice.errorMsg} className=\"form-row\">\r\n            <Input \r\n                placeholder = {'Odpowiedź ' + (props.choiceNumber + 1)} \r\n                size=\"large\"\r\n                value={props.choice.text} \r\n                onChange={(event) => props.handleChoiceChange(event, props.choiceNumber,props.questionNumber)} />\r\n\r\n\r\n        </Form.Item>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default NewQuiz;"]},"metadata":{},"sourceType":"module"}