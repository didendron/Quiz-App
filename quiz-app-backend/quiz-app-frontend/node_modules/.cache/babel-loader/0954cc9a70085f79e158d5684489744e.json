{"ast":null,"code":"import \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Albert\\\\eclipse-workspace\\\\QuizApp\\\\quiz-app-frontend\\\\src\\\\user\\\\signup\\\\Signup.js\";\nimport { Component } from \"react\";\nimport './Signup.css';\nimport { NAME_MIN_LENGTH, NAME_MAX_LENGTH, PASSWORD_MIN_LENGTH, PASSWORD_MAX_LENGTH } from '../../common/constants';\nimport { signup } from '../../api/Api';\nimport { Link } from 'react-router-dom';\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateName = name => {\n      if (name.length < NAME_MIN_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Nazwa za krótka (Minimum ${NAME_MIN_LENGTH} znaków.)`\n        };\n      } else if (name.length > NAME_MAX_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Nazwa za długa (Maximum ${NAME_MAX_LENGTH} znaków.)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.validatePassword = password => {\n      if (password.length < PASSWORD_MIN_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Hasło za krótkie (Minimum ${PASSWORD_MIN_LENGTH} znaków.)`\n        };\n      } else if (password.length > PASSWORD_MAX_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Hasło za długie (Maximum ${PASSWORD_MAX_LENGTH} znaków.)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.state = {\n      name: {\n        value: ''\n      },\n      password: {\n        value: ''\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.isFormInvalid = this.isFormInvalid.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"signup-title\",\n        children: \"Rejestracja\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-content\",\n        children: /*#__PURE__*/_jsxDEV(_Form, {\n          onSubmit: this.handleSubmit,\n          className: \"signup-form\",\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            label: \"Nazwa u\\u017Cytkownika\",\n            validateStatus: this.state.name.validateStatus,\n            help: this.state.name.errorMsg,\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              size: \"large\",\n              name: \"name\",\n              autoComplete: \"off\",\n              placeholder: \"Twoja nazwa u\\u017Cytkownika\",\n              value: this.state.name.value,\n              onChange: event => this.handleInputChange(event, this.validateName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            label: \"Has\\u0142o\",\n            validateStatus: this.state.password.validateStatus,\n            help: this.state.password.errorMsg,\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              size: \"large\",\n              name: \"password\",\n              type: \"password\",\n              autoComplete: \"off\",\n              placeholder: \"Has\\u0142o pomi\\u0119dzy 6 a 20 znakami\",\n              value: this.state.password.value,\n              onChange: event => this.handleInputChange(event, this.validatePassword)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              size: \"large\",\n              className: \"signup-button\",\n              disabled: this.isFormInvalid(),\n              children: \"Zarejestruj si\\u0119\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), \"Jeste\\u015B zarejestrowany? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Zaloguj si\\u0119!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleInputChange(event, validationInput) {\n    const inputName = event.target.name;\n    const inputValue = event.target.value;\n    this.setState({\n      [inputName]: {\n        value: inputValue,\n        ...validationInput(inputValue)\n      }\n    });\n  }\n\n  isFormInvalid() {\n    return !(this.state.name.validateStatus === 'success' && this.state.password.validateStatus === 'success');\n  }\n\n  handleSubmit(event) {\n    this.props.history.push(\"/\");\n    event.preventDefault();\n    const signupRequest = {\n      name: this.state.name.value,\n      password: this.state.password.value\n    };\n    signup(signupRequest).then(response => {\n      _notification.success({\n        message: 'Quiz App',\n        description: 'Rejestracja przebiegła pomyślnie.Zaloguj się'\n      }); //this.props.history.push(\"/login\");\n\n    }).catch(error => {\n      _notification.error({\n        message: 'Quiz App',\n        description: error.message || 'Błąd!Spróbuj ponownie'\n      });\n    });\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/Albert/eclipse-workspace/QuizApp/quiz-app-frontend/src/user/signup/Signup.js"],"names":["Component","NAME_MIN_LENGTH","NAME_MAX_LENGTH","PASSWORD_MIN_LENGTH","PASSWORD_MAX_LENGTH","signup","Link","Signup","constructor","props","validateName","name","length","validateStatus","errorMsg","validatePassword","password","state","value","handleInputChange","bind","isFormInvalid","handleSubmit","render","event","validationInput","inputName","target","inputValue","setState","history","push","preventDefault","signupRequest","then","response","success","message","description","catch","error"],"mappings":"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","sourcesContent":["import { Button, Form, Input, notification } from 'antd';\r\nimport { Component } from \"react\";\r\nimport './Signup.css';\r\nimport { \r\n    NAME_MIN_LENGTH, NAME_MAX_LENGTH, \r\n    PASSWORD_MIN_LENGTH,PASSWORD_MAX_LENGTH\r\n    \r\n} from '../../common/constants';\r\n\r\nimport { signup } from '../../api/Api';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Signup extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            name:{\r\n               value: ''\r\n            },\r\n            password:{\r\n                value:''\r\n            }\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.isFormInvalid = this.isFormInvalid.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"signup-container\">\r\n                <h1 className=\"signup-title\">Rejestracja</h1>\r\n                <div className=\"signup-content\">\r\n                    <Form onSubmit={this.handleSubmit} className=\"signup-form\">\r\n                        <Form.Item \r\n                            label=\"Nazwa użytkownika\"\r\n                            validateStatus={this.state.name.validateStatus}\r\n                            help={this.state.name.errorMsg}>\r\n                             <Input \r\n                                size=\"large\"\r\n                                name=\"name\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"Twoja nazwa użytkownika\"\r\n                                value={this.state.name.value} \r\n                                onChange={(event) => this.handleInputChange(event, this.validateName)} /> \r\n                        </Form.Item>\r\n                        <Form.Item \r\n                            label=\"Hasło\"\r\n                            validateStatus={this.state.password.validateStatus}\r\n                            help={this.state.password.errorMsg}>\r\n                            <Input \r\n                                size=\"large\"\r\n                                name=\"password\" \r\n                                type=\"password\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"Hasło pomiędzy 6 a 20 znakami\" \r\n                                value={this.state.password.value} \r\n                                onChange={(event) => this.handleInputChange(event, this.validatePassword)} />    \r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" \r\n                                htmlType=\"submit\" \r\n                                size=\"large\" \r\n                                className=\"signup-button\"\r\n                                disabled={this.isFormInvalid()}\r\n                                >Zarejestruj się</Button>\r\n                                Jesteś zarejestrowany? <Link to=\"/login\">Zaloguj się!</Link>\r\n                        </Form.Item>\r\n                    </Form>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    validateName=(name)=>{\r\n        if(name.length < NAME_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Nazwa za krótka (Minimum ${NAME_MIN_LENGTH} znaków.)`\r\n            };\r\n        } else if (name.length > NAME_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Nazwa za długa (Maximum ${NAME_MAX_LENGTH} znaków.)`\r\n            };\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n              };            \r\n        }\r\n    }\r\n    validatePassword=(password)=>{\r\n        if(password.length < PASSWORD_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Hasło za krótkie (Minimum ${PASSWORD_MIN_LENGTH} znaków.)`\r\n            };\r\n        } else if (password.length > PASSWORD_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Hasło za długie (Maximum ${PASSWORD_MAX_LENGTH} znaków.)`\r\n            };\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n              };            \r\n        }\r\n    }\r\n\r\n    handleInputChange( event,validationInput) {\r\n    \r\n        const inputName = event.target.name;        \r\n        const inputValue = event.target.value;\r\n        this.setState({\r\n            [inputName] : {\r\n                value: inputValue,\r\n                ...validationInput(inputValue)\r\n            }\r\n        });\r\n\r\n    }    \r\n    isFormInvalid() {\r\n        return !(this.state.name.validateStatus === 'success' &&\r\n            this.state.password.validateStatus === 'success'\r\n        );\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        this.props.history.push(\"/\");\r\n        event.preventDefault();\r\n    \r\n        const signupRequest = {\r\n            name: this.state.name.value,\r\n            password: this.state.password.value\r\n        };\r\n        \r\n        signup(signupRequest)\r\n        .then(response => {\r\n            notification.success({\r\n                message: 'Quiz App',\r\n                description: 'Rejestracja przebiegła pomyślnie.Zaloguj się',\r\n            });          \r\n            //this.props.history.push(\"/login\");\r\n        }).catch(error => {\r\n            notification.error({\r\n                message: 'Quiz App',\r\n                description: error.message || 'Błąd!Spróbuj ponownie'\r\n            });\r\n        });\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}