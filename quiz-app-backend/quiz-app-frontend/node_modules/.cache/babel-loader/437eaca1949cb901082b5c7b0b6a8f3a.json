{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Albert\\\\eclipse-workspace\\\\QuizApp\\\\quiz-app-frontend\\\\src\\\\user\\\\login\\\\Login.js\";\nimport Form from 'antd/lib/form/Form';\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.form.validateFields((error, values) => {\n      if (!error) {//const loginRequest = Object.assign({}, values);\n\n        /*login(loginRequest)\r\n        .then(response => {\r\n            localStorage.setItem(ACCESS_TOKEN, response.accessToken);\r\n            this.props.onLogin();\r\n        }).catch(error => {\r\n            if(error.status === 401) {\r\n                notification.error({\r\n                    message: 'Polling App',\r\n                    description: 'Your Username or Password is incorrect. Please try again!'\r\n                });                    \r\n            } else {\r\n                notification.error({\r\n                    message: 'Polling App',\r\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                });                                            \r\n            }\r\n        });*/\n      }\n    });\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"login-title\",\n        children: \"Logowanie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-content\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          className: \"login-form\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            children: getFieldDecorator('name', {\n              rules: [{\n                required: true,\n                message: 'Wpisz nazwę użytkownika!'\n              }]\n            })( /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(_Icon, {\n                type: \"user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 41\n              }, this),\n              size: \"large\",\n              name: \"name\",\n              placeholder: \"Nazwa u\\u017Cytkownika\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: getFieldDecorator('password', {\n              rules: [{\n                required: true,\n                message: 'Wpisz hasło!'\n              }]\n            })( /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(_Icon, {\n                type: \"lock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this),\n              size: \"large\",\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"Has\\u0142o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: [/*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              size: \"large\",\n              onClick: this.handleSubmit,\n              className: \"login-button\",\n              children: \"Zaloguj si\\u0119\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), \"lub \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \"zarejestruj si\\u0119!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Form.create()(Login);","map":{"version":3,"sources":["C:/Users/Albert/eclipse-workspace/QuizApp/quiz-app-frontend/src/user/login/Login.js"],"names":["Form","Component","Link","Login","constructor","props","handleSubmit","bind","event","preventDefault","form","validateFields","error","values","render","getFieldDecorator","rules","required","message","create"],"mappings":"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","sourcesContent":["import { Button, Input,Icon } from 'antd';\r\nimport Form from 'antd/lib/form/Form';\r\nimport { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();   \r\n        this.props.form.validateFields((error, values) => {\r\n            if (!error) {\r\n                //const loginRequest = Object.assign({}, values);\r\n                /*login(loginRequest)\r\n                .then(response => {\r\n                    localStorage.setItem(ACCESS_TOKEN, response.accessToken);\r\n                    this.props.onLogin();\r\n                }).catch(error => {\r\n                    if(error.status === 401) {\r\n                        notification.error({\r\n                            message: 'Polling App',\r\n                            description: 'Your Username or Password is incorrect. Please try again!'\r\n                        });                    \r\n                    } else {\r\n                        notification.error({\r\n                            message: 'Polling App',\r\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\r\n                        });                                            \r\n                    }\r\n                });*/\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        \r\n        return (\r\n            \r\n            <div className=\"login-container\">\r\n                <h1 className=\"login-title\">Logowanie</h1>\r\n                <div className=\"login-content\">\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                            {getFieldDecorator('name', {\r\n                                rules: [{ required: true, message: 'Wpisz nazwę użytkownika!' }],\r\n                            })(\r\n                            <Input \r\n                                prefix={<Icon type=\"user\" />}\r\n                                size=\"large\"\r\n                                name=\"name\" \r\n                                placeholder=\"Nazwa użytkownika\" />    \r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                        {getFieldDecorator('password', {\r\n                            rules: [{ required: true, message: 'Wpisz hasło!' }],\r\n                        })(\r\n                            <Input \r\n                                prefix={<Icon type=\"lock\" />}\r\n                                size=\"large\"\r\n                                name=\"password\" \r\n                                type=\"password\" \r\n                                placeholder=\"Hasło\"  />                        \r\n                        )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" size=\"large\" onClick={this.handleSubmit}\r\n                            className=\"login-button\">Zaloguj się</Button>\r\n                            lub <Link to=\"/signup\">zarejestruj się!</Link>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Form.create()(Login);"]},"metadata":{},"sourceType":"module"}