{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Albert\\\\eclipse-workspace\\\\QuizApp\\\\quiz-app-frontend\\\\src\\\\quiz\\\\NewQuiz.js\";\nimport Icon, { PlusOutlined } from '@ant-design/icons';\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { Component } from \"react\";\nimport { QUIZ_MAX_CHOICES, QUIZ_NAME_MAX_LENGTH, QUIZ_QUESTION_MAX_LENGTH } from \"../common/constants\";\nimport './NewQuiz.css';\n\nclass NewQuiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateQuizName = value => {\n      if (value.length === 0) {\n        return {\n          validateStatus: 'error',\n          errorMsg: 'Wpisz nazwę quizu!'\n        };\n      } else if (value.length > QUIZ_NAME_MAX_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Nazwa quizu za długa (Maksymalnie ${QUIZ_NAME_MAX_LENGTH} znaków dozwolone)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.validateQuestion = value => {\n      if (value.length === 0) {\n        return {\n          validateStatus: 'error',\n          errorMsg: 'Wpisz pytanie!'\n        };\n      } else if (value.length > QUIZ_QUESTION_MAX_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: `Pytanie za długie (Maksymalnie ${QUIZ_QUESTION_MAX_LENGTH} znaków dozwolone)`\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    this.state = {\n      quiz: {\n        text: ''\n      },\n      category: {\n        text: ''\n      },\n      questions: [{\n        text: '',\n        choiceOne: '',\n        choiceTwo: '',\n        choiceThree: '',\n        choiceFour: ''\n      }]\n    };\n    this.handleQuizChange = this.handleQuizChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCategoryChange = this.handleCategoryChange.bind(this);\n    this.addChoice = this.addChoice.bind(this);\n    this.removeQuestion = this.removeQuestion.bind(this);\n    this.handleQuestionChange = this.handleQuestionChange.bind(this);\n  }\n\n  addChoice(event) {\n    const questions = this.state.questions.slice();\n    this.setState({\n      questions: questions.concat([{\n        text: '',\n        choiceOne: '',\n        choiceTwo: '',\n        choiceThree: '',\n        choiceFour: ''\n      }])\n    });\n  }\n\n  removeQuestion(questionNumber) {\n    const questions = this.state.questions.slice();\n    this.setState({\n      questions: [...questions.slice(0, questionNumber), ...questions.slice(questionNumber + 1)]\n    });\n  }\n\n  handleQuizChange(event) {\n    const value = event.target.value;\n    this.setState({\n      quiz: {\n        text: value,\n        ...this.validateQuizName(value)\n      }\n    });\n  }\n\n  handleCategoryChange(value) {\n    this.setState({\n      category: {\n        text: value\n      }\n    });\n  }\n\n  handleQuestionChange(value, index) {\n    const questions = this.state.questions.slice();\n    questions[index] = {\n      text: value,\n      ...this.validateQuestion(value)\n    };\n    this.setState({\n      questions: questions\n    });\n  }\n\n  handleSubmit(event) {}\n\n  render() {\n    const questionViews = [];\n    this.state.questions.forEach((question, index) => {\n      questionViews.push( /*#__PURE__*/_jsxDEV(QuizQuestion, {\n        question: question,\n        questionNumber: index,\n        removeQuestion: this.removeQuestion,\n        handleQuestionChange: this.handleQuestionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 32\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Nowy Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-quiz-content\",\n        children: /*#__PURE__*/_jsxDEV(_Form, {\n          onFinish: this.handleSubmit,\n          className: \"new-quiz-form\",\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            validateStatus: this.state.quiz.validateStatus,\n            help: this.state.quiz.errorMsg,\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              placeholder: \"Wprowad\\u017A nazw\\u0119 quizu\",\n              style: {\n                fontSize: '16px'\n              },\n              autosize: {\n                minRows: 3,\n                maxRows: 6\n              },\n              name: \"quiz\",\n              value: this.state.quiz.text,\n              onChange: this.handleQuizChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            className: \"form-row\",\n            children: [\"Kategoria:\", /*#__PURE__*/_jsxDEV(_Select, {\n              name: \"categories\",\n              defaultValue: \"geografia\",\n              value: this.state.category.text,\n              onChange: this.handleCategoryChange,\n              style: {\n                width: 150\n              },\n              children: [/*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"geografia\",\n                children: \"geografia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"j\\u0119zyk\",\n                children: \"j\\u0119zyk\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"historia\",\n                children: \"historia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"przyroda\",\n                children: \"przyroda\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"filmy\",\n                children: \"filmy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"ksi\\u0105\\u017Cki\",\n                children: \"ksi\\u0105\\u017Cki\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"wiedza og\\xF3lna\",\n                children: \"wiedza og\\xF3lna\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n                value: \"matematyka\",\n                children: \"matematyka\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 39\n            }, this), questionViews, /*#__PURE__*/_jsxDEV(_Form.Item, {\n              className: \"form-row\",\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                type: \"dashed\",\n                onClick: this.addChoice,\n                disabled: this.state.questions.length === QUIZ_MAX_CHOICES,\n                children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 33\n                }, this), \" Dodaj pytanie\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              size: \"large\" //disabled={this.isFormInvalid()}\n              ,\n              className: \"create-quiz-button\",\n              children: \"Utw\\xF3rz quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction QuizQuestion(props) {\n  return /*#__PURE__*/_jsxDEV(_Form.Item, {\n    validateStatus: props.question.validateStatus,\n    help: props.question.errorMsg,\n    className: \"form-row\",\n    children: [/*#__PURE__*/_jsxDEV(TextArea, {\n      placeholder: 'Pytanie ' + (props.questionNumber + 1),\n      style: {\n        fontSize: '16px'\n      },\n      autosize: {\n        minRows: 2,\n        maxRows: 4\n      },\n      name: \"question\",\n      value: props.question.text,\n      onChange: value => props.handleQuestionChange(value, props.questionNumber)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Input, {\n      placeholder: 'Pytanie ' + (props.questionNumber + 1),\n      size: \"large\",\n      value: props.question.text,\n      className: props.choiceNumber > 1 ? \"optional-choice\" : null,\n      onChange: event => props.handleChoiceChange(event, props.choiceNumber)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), props.choiceNumber > 1 ? /*#__PURE__*/_jsxDEV(Icon, {\n      className: \"dynamic-delete-button\",\n      type: \"close\",\n      disabled: props.choiceNumber <= 1,\n      onClick: () => props.removeChoice(props.choiceNumber)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this);\n}\n\n_c = QuizQuestion;\nexport default NewQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizQuestion\");","map":{"version":3,"sources":["C:/Users/Albert/eclipse-workspace/QuizApp/quiz-app-frontend/src/quiz/NewQuiz.js"],"names":["Icon","PlusOutlined","TextArea","Component","QUIZ_MAX_CHOICES","QUIZ_NAME_MAX_LENGTH","QUIZ_QUESTION_MAX_LENGTH","NewQuiz","constructor","props","validateQuizName","value","length","validateStatus","errorMsg","validateQuestion","state","quiz","text","category","questions","choiceOne","choiceTwo","choiceThree","choiceFour","handleQuizChange","bind","handleSubmit","handleCategoryChange","addChoice","removeQuestion","handleQuestionChange","event","slice","setState","concat","questionNumber","target","index","render","questionViews","forEach","question","push","fontSize","minRows","maxRows","width","QuizQuestion","choiceNumber","handleChoiceChange","removeChoice"],"mappings":"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","sourcesContent":["\r\nimport { Button, Form, Input, Select } from \"antd\";\r\nimport Icon, { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\nimport { Component } from \"react\";\r\nimport { QUIZ_MAX_CHOICES, QUIZ_NAME_MAX_LENGTH, QUIZ_QUESTION_MAX_LENGTH } from \"../common/constants\";\r\nimport './NewQuiz.css';  \r\n\r\n\r\n\r\nclass NewQuiz extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            quiz:{\r\n                text:''\r\n            },\r\n            category:{\r\n                text:''\r\n            },\r\n            questions:[{\r\n                text:'',\r\n                choiceOne:'',\r\n                choiceTwo:'',\r\n                choiceThree:'',\r\n                choiceFour:''\r\n            }]\r\n            \r\n           \r\n\r\n        }\r\n\r\n    this.handleQuizChange=this.handleQuizChange.bind(this);\r\n    this.handleSubmit=this.handleSubmit.bind(this);\r\n    this.handleCategoryChange=this.handleCategoryChange.bind(this);\r\n    this.addChoice=this.addChoice.bind(this);\r\n    this.removeQuestion=this.removeQuestion.bind(this);\r\n    this.handleQuestionChange=this.handleQuestionChange.bind(this);\r\n\r\n    }\r\n\r\n    addChoice(event){\r\n        const questions = this.state.questions.slice();\r\n        this.setState({\r\n            questions:questions.concat([{\r\n                text:'',\r\n                choiceOne:'',\r\n                choiceTwo:'',\r\n                choiceThree:'',\r\n                choiceFour:''\r\n            }])\r\n        }); \r\n    }\r\n    removeQuestion(questionNumber){\r\n        const questions = this.state.questions.slice();\r\n        this.setState({\r\n            questions:[...questions.slice(0,questionNumber),...questions.slice(questionNumber+1)]\r\n        });\r\n    }\r\n\r\n    handleQuizChange(event){\r\n        const value=event.target.value;\r\n        this.setState({\r\n            quiz:{\r\n                text:value,\r\n                ...this.validateQuizName(value)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    validateQuizName=(value)=>{\r\n        if(value.length === 0) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Wpisz nazwę quizu!'\r\n            }\r\n        } else if (value.length > QUIZ_NAME_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Nazwa quizu za długa (Maksymalnie ${QUIZ_NAME_MAX_LENGTH} znaków dozwolone)`\r\n            }    \r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCategoryChange(value){\r\n        this.setState({\r\n            category:{\r\n                text:value\r\n            }\r\n        });\r\n    }\r\n\r\n    handleQuestionChange(value,index){\r\n        const questions = this.state.questions.slice();\r\n        \r\n\r\n        questions[index] = {\r\n            text: value,\r\n            ...this.validateQuestion(value)\r\n        }\r\n\r\n        this.setState({\r\n            questions: questions\r\n        });\r\n\r\n    }\r\n    validateQuestion=(value)=>{\r\n        if(value.length === 0) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Wpisz pytanie!'\r\n            }\r\n        } else if (value.length > QUIZ_QUESTION_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Pytanie za długie (Maksymalnie ${QUIZ_QUESTION_MAX_LENGTH} znaków dozwolone)`\r\n            }    \r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    handleSubmit(event){\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const questionViews=[];\r\n        this.state.questions.forEach((question,index)=>{\r\n            questionViews.push(<QuizQuestion question={question} questionNumber={index}\r\n            removeQuestion={this.removeQuestion} handleQuestionChange={this.handleQuestionChange}/>);\r\n        });\r\n\r\n        return(\r\n            <div className=\"new-quiz-container\">\r\n                <h1 className=\"title\">Nowy Quiz</h1>\r\n                <div className=\"new-quiz-content\">\r\n                    <Form onFinish={this.handleSubmit} className=\"new-quiz-form\">\r\n                        <Form.Item validateStatus={this.state.quiz.validateStatus}\r\n                        help={this.state.quiz.errorMsg} className=\"form-row\">\r\n                            <TextArea\r\n                            placeholder=\"Wprowadź nazwę quizu\"\r\n                            style = {{ fontSize: '16px' }} \r\n                            autosize={{ minRows: 3, maxRows: 6 }} \r\n                            name = \"quiz\"\r\n                            value = {this.state.quiz.text}\r\n                            onChange = {this.handleQuizChange}/>\r\n                        </Form.Item>\r\n                        <Form.Item className=\"form-row\">\r\n                            \r\n                            Kategoria:<Select name=\"categories\"\r\n                            defaultValue=\"geografia\"\r\n                            value={this.state.category.text}\r\n                            onChange={this.handleCategoryChange}\r\n                            style={{width:150}}>\r\n                                <Select.Option value=\"geografia\">geografia</Select.Option>\r\n                                <Select.Option value=\"język\">język</Select.Option>\r\n                                <Select.Option value=\"historia\">historia</Select.Option>\r\n                                <Select.Option value=\"przyroda\">przyroda</Select.Option>\r\n                                <Select.Option value=\"filmy\">filmy</Select.Option>\r\n                                <Select.Option value=\"książki\">książki</Select.Option>\r\n                                <Select.Option value=\"wiedza ogólna\">wiedza ogólna</Select.Option>\r\n                                <Select.Option value=\"matematyka\">matematyka</Select.Option>\r\n                            </Select>\r\n                        {questionViews}\r\n\r\n                        <Form.Item className=\"form-row\">\r\n                            <Button type=\"dashed\" onClick={this.addChoice} disabled={this.state.questions.length === QUIZ_MAX_CHOICES}>\r\n                                <PlusOutlined /> Dodaj pytanie\r\n                            </Button>\r\n                        </Form.Item>\r\n\r\n                        </Form.Item>\r\n                        <Form.Item className=\"form-row\">\r\n                            <Button type=\"primary\" \r\n                                htmlType=\"submit\" \r\n                                size=\"large\" \r\n                                //disabled={this.isFormInvalid()}\r\n                                className=\"create-quiz-button\">Utwórz quiz</Button>\r\n                        </Form.Item>\r\n                       \r\n\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction QuizQuestion(props){\r\n    return(\r\n        <Form.Item validateStatus={props.question.validateStatus}\r\n        help={props.question.errorMsg} className=\"form-row\">\r\n            <TextArea\r\n                placeholder={'Pytanie ' + (props.questionNumber + 1)}\r\n                style = {{ fontSize: '16px' }} \r\n                autosize={{ minRows: 2, maxRows: 4 }} \r\n                name = \"question\"\r\n                value = {props.question.text} \r\n                onChange={(value)=>props.handleQuestionChange(value, props.questionNumber)}/>\r\n\r\n\r\n                \r\n            <Input \r\n                placeholder = {'Pytanie ' + (props.questionNumber + 1)}\r\n                size=\"large\"\r\n                value={props.question.text} \r\n                className={ props.choiceNumber > 1 ? \"optional-choice\": null}\r\n                onChange={(event) => props.handleChoiceChange(event, props.choiceNumber)} />\r\n\r\n            {\r\n                props.choiceNumber > 1 ? (\r\n                <Icon\r\n                    className=\"dynamic-delete-button\"\r\n                    type=\"close\"\r\n                    disabled={props.choiceNumber <= 1}\r\n                    onClick={() => props.removeChoice(props.choiceNumber)}\r\n                /> ): null\r\n            }    \r\n        </Form.Item>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default NewQuiz;"]},"metadata":{},"sourceType":"module"}