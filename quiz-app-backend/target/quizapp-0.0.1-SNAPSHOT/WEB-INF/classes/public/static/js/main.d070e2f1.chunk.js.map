{"version":3,"sources":["common/AppHeader.js","common/constants.js","api/Api.js","user/signup/Signup.js","user/login/Login.js","common/PrivateRoute.js","quiz/NewQuiz.js","quiz/QuizList.js","quiz/Quiz.js","app/App.js","reportWebVitals.js","index.js"],"names":["AppHeader","props","handleMenuClick","bind","key","this","onLogout","menuItems","currentUser","Item","to","className","onClick","mode","selectedKeys","location","pathname","style","lineHeight","Component","withRouter","ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","Signup","validateName","name","length","validateStatus","errorMsg","validatePassword","password","state","value","handleInputChange","checkNameAvailability","checkPasswordAvailability","isFormInvalid","handleSubmit","onSubmit","label","help","size","autoComplete","placeholder","onBlur","onChange","event","paddingLeft","type","htmlType","disabled","validationInput","inputName","target","inputValue","setState","nameValue","method","console","log","isAvailable","catch","passwordValue","preventDefault","signupRequest","body","JSON","stringify","signup","notification","success","message","description","history","push","error","Login","values","loginRequest","setItem","accessToken","onLogin","status","data","onFinish","rules","required","prefix","UserAddOutlined","LockOutlined","PrivateRoute","component","authenticated","rest","render","from","QuizQuestion","choiceViews","question","choices","forEach","choice","index","QuizChoice","choiceNumber","questionNumber","handleChoiceChange","fontSize","autosize","minRows","maxRows","text","handleQuestionChange","CloseOutlined","removeQuestion","Group","handleRadioChange","NewQuiz","validateQuizName","validateQuestion","validateChoice","quiz","category","questions","correctChoice","handleQuizChange","handleCategoryChange","addChoice","slice","concat","newState","parse","indexQuestion","val","i","quizData","createQuiz","handleLogout","questionViews","defaultValue","width","Option","PlusOutlined","randomColor","require","QuizList","quizzes","loadQuizList","quizViews","quizIndex","QuizView","backgroundColor","QuestionView","bgColor","handleClick","id","Quiz","countVotes","totalVotes","element","color","correctVotes","ReactDOM","document","getElementById","scrollIntoView","indexOfCorrectChoice","findIndex","obj","quizView","questionIndex","App","isAuthenticated","handleLogin","loadCurrentUser","config","placement","top","duration","removeItem","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"0dAQMA,G,yDAGF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAHT,E,+DAQL,WADS,EAALC,KAETC,KAAKJ,MAAMK,a,+BAKf,IAAIC,EA8BJ,OA5BIA,EADDF,KAAKJ,MAAMO,YACE,CACR,kBAAMC,KAAN,UACE,cAAC,IAAD,CAAMC,GAAG,OAAT,wBADa,QAGf,kBAAMD,KAAN,CAAwBE,UAAU,SAAlC,6BAAe,UAGf,mBAAMF,KAAN,CAAsBE,UAAU,OAAhC,cACMN,KAAKJ,MAAMO,cADF,SAMP,CACR,kBAAMC,KAAN,UACE,cAAC,IAAD,CAAMC,GAAG,OAAT,wBADa,QAGf,kBAAMD,KAAN,UACE,cAAC,IAAD,CAAMC,GAAG,SAAT,wBADa,UAGf,kBAAMD,KAAN,UACE,cAAC,IAAD,CAAMC,GAAG,UAAT,0BADa,YASnB,cAAC,SAAD,CAAQC,UAAU,aAAlB,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CAAMD,GAAG,IAAT,wBAEH,mBAAME,QAASP,KAAKH,gBAAiBS,UAAU,WAC5CE,KAAK,aACLC,aAAc,CAACT,KAAKJ,MAAMc,SAASC,UACnCC,MAAO,CAAEC,WAAY,QAHxB,SAIIX,a,GAzDDY,cAoETC,cAAWpB,G,0DCvEbqB,G,OAAe,eCCtBC,EAAU,SAACC,GACb,IAAMC,EAAU,IAAIC,QAAQ,CACxB,eAAgB,qBAGjBC,aAAaC,QAAQN,IACpBG,EAAQI,OAAO,gBAAiB,UAAYF,aAAaC,QAAQN,IAGrE,IAAMQ,EAAW,CAACL,QAASA,GAG3B,OAFAD,EAAUO,OAAOC,OAAO,GAAIF,EAAUN,GAE/BS,MAAMT,EAAQU,IAAKV,GACzBW,MAAK,SAAAC,GAAQ,OACVA,EAASC,OAAOF,MAAK,SAAAE,GACjB,OAAID,EAASE,GAGND,EAFIE,QAAQC,OAAOH,U,ICqPvBI,E,kDA5PX,WAAYvC,GAAO,IAAD,8BACd,cAAMA,IAqEVwC,aAAa,SAACC,GACV,OAAGA,EAAKC,OFtFa,EEuFV,CACHC,eAAgB,QAChBC,SAAS,+BAAD,OFzFK,EEyFL,iBAELH,EAAKC,OF1FO,GE2FZ,CACHC,eAAgB,QAChBC,SAAS,gCAAD,OF7FO,GE6FP,iBAGL,CACHD,eAAgB,UAChBC,SAAU,OApFJ,EAwFlBC,iBAAiB,SAACC,GACd,OAAGA,EAASJ,OFtGe,EEuGhB,CACHC,eAAgB,QAChBC,SAAS,qCAAD,OFzGW,EEyGX,iBAELE,EAASJ,OF1GO,GE2GhB,CACHC,eAAgB,QAChBC,SAAS,sCAAD,OF7GW,GE6GX,iBAGL,CACHD,eAAgB,UAChBC,SAAU,OApGlB,EAAKG,MAAM,CACPN,KAAK,CACFO,MAAO,IAEVF,SAAS,CACLE,MAAM,KAGd,EAAKC,kBAAoB,EAAKA,kBAAkB/C,KAAvB,gBACzB,EAAKgD,sBAAsB,EAAKA,sBAAsBhD,KAA3B,gBAC3B,EAAKiD,0BAA0B,EAAKA,0BAA0BjD,KAA/B,gBAC/B,EAAKkD,cAAgB,EAAKA,cAAclD,KAAnB,gBACrB,EAAKmD,aAAe,EAAKA,aAAanD,KAAlB,gBAdN,E,qDAmBT,IAAD,OACJ,OAEI,sBAAKQ,UAAU,mBAAf,UACI,oBAAIA,UAAU,eAAd,yBACA,qBAAKA,UAAU,iBAAf,SACI,oBAAM4C,SAAUlD,KAAKiD,aAAc3C,UAAU,cAA7C,UACI,kBAAMF,KAAN,CACI+C,MAAM,yBACNZ,eAAgBvC,KAAK2C,MAAMN,KAAKE,eAChCa,KAAMpD,KAAK2C,MAAMN,KAAKG,SAH1B,SAIK,mBACGa,KAAK,QACLhB,KAAK,OACLiB,aAAa,MACbC,YAAY,+BACZX,MAAO5C,KAAK2C,MAAMN,KAAKO,MACvBY,OAAQxD,KAAK8C,sBACbW,SAAU,SAACC,GAAD,OAAW,EAAKb,kBAAkBa,EAAO,EAAKtB,mBAEhE,kBAAMhC,KAAN,CACI+C,MAAM,aACNZ,eAAgBvC,KAAK2C,MAAMD,SAASH,eACpCa,KAAM,uBAAOxC,MAAO,CAAC+C,YAAY,QAA3B,SAAqC3D,KAAK2C,MAAMD,SAASF,WAHnE,SAII,mBACIa,KAAK,QACLhB,KAAK,WACLuB,KAAK,WACLN,aAAa,MACbC,YAAY,0CACZX,MAAO5C,KAAK2C,MAAMD,SAASE,MAC3BY,OAAQxD,KAAK+C,0BACbU,SAAU,SAACC,GAAD,OAAW,EAAKb,kBAAkBa,EAAO,EAAKjB,uBAEhE,mBAAMrC,KAAN,WACI,mBAAQwD,KAAK,UACTC,SAAS,SACTR,KAAK,QACL/C,UAAU,gBACVwD,SAAU9D,KAAKgD,gBACfzC,QAASP,KAAKiD,aALlB,kCADJ,+BAQ+B,cAAC,IAAD,CAAM5C,GAAG,SAAT,4C,wCA8ChCqD,EAAMK,GAErB,IAAMC,EAAYN,EAAMO,OAAO5B,KACzB6B,EAAaR,EAAMO,OAAOrB,MAChC5C,KAAKmE,SAAL,eACKH,EADL,aAEQpB,MAAOsB,GACJH,EAAgBG,Q,8CAMP,IDpFY7B,ECoFb,OACb+B,EAAUpE,KAAK2C,MAAMN,KAAKO,MAGiB,UAA9C5C,KAAKoC,aAAagC,GAAW7B,gBDxFAF,ECmGR+B,EDlGrBnD,EAAQ,CACXW,IAAK,2CAA2CS,EAChDgC,OAAQ,SCiGPxC,MAAK,SAAAC,GACFwC,QAAQC,IAAIzC,EAAS0C,aAClB1C,EAAS0C,YACR,EAAKL,SAAS,CACV9B,KAAK,CACDO,MAAMwB,EACN7B,eAAe,UACfC,SAAS,QAIjB,EAAK2B,SAAS,CACV9B,KAAK,CACDO,MAAMwB,EACN7B,eAAe,QACfC,SAAS,iDAKtBiC,OAAM,SAAA3C,GACL,EAAKqC,SAAS,CACV9B,KAAK,CACDO,MAAMwB,EACN7B,eAAe,UACfC,SAAS,WApCjBxC,KAAKmE,SAAS,CACV9B,KAAK,aACDO,MAAMwB,GACHpE,KAAKoC,aAAagC,Q,kDAyCT,ID9Ha1B,EC8Hd,OACjBgC,EAAc1E,KAAK2C,MAAMD,SAASE,MAEiB,UAAtD5C,KAAKyC,iBAAiBiC,GAAenC,gBDjIHG,EC2IRgC,ED1I1BzD,EAAQ,CACXW,IAAK,mDAAmDc,EACxD2B,OAAQ,SCyIPxC,MAAK,SAAAC,GACCA,EAAS0C,YACR,EAAKL,SAAS,CACVzB,SAAS,CACLE,MAAM8B,EACNnC,eAAe,UACfC,SAAS,QAIjB,EAAK2B,SAAS,CACVzB,SAAS,CACLE,MAAM8B,EACNnC,eAAe,QACfC,SAAS,qCAKtBiC,OAAM,SAAA3C,GACL,EAAKqC,SAAS,CACVzB,SAAS,CACLE,MAAM8B,EACNnC,eAAe,UACfC,SAAS,WAlCjBxC,KAAKmE,SAAS,CACVzB,SAAS,aACLE,MAAM8B,GACH1E,KAAKyC,iBAAiBiC,Q,sCA2CrC,QAA4C,YAAnC1E,KAAK2C,MAAMN,KAAKE,gBACkB,YAAvCvC,KAAK2C,MAAMD,SAASH,kB,mCAIfmB,GAAQ,IAAD,OAEhBA,EAAMiB,iBDrNP,SAAgBC,GACnB,OAAO3D,EAAQ,CACXW,IAAK,mCACLyC,OAAQ,OACRQ,KAAMC,KAAKC,UAAUH,KCwNrBI,CALsB,CAClB3C,KAAMrC,KAAK2C,MAAMN,KAAKO,MACtBF,SAAU1C,KAAK2C,MAAMD,SAASE,QAIjCf,MAAK,SAAAC,GACFmD,EAAA,EAAaC,QAAQ,CACjBC,QAAS,WACTC,YAAa,gEAEjB,EAAKxF,MAAMyF,QAAQC,KAAK,aACzBb,OAAM,SAAAc,GACLN,EAAA,EAAaM,MAAM,CACfJ,QAAS,WACTC,YAAaG,EAAMJ,SAAW,8C,GApPzBrE,a,2BCkFN0E,E,kDAnFX,WAAY5F,GAAQ,IAAD,8BACf,cAAMA,IAcVqD,aAAc,SAACwC,GFQZ,IAAeC,KELRD,EFMHxE,EAAQ,CACXW,IAAK,kCACLyC,OAAQ,OACRQ,KAAMC,KAAKC,UAAUW,MERpB7D,MAAK,SAAAC,GACFT,aAAasE,QAAQ3E,EAAcc,EAAS8D,aAC5CtB,QAAQC,IAAIzC,EAAS8D,aACrB,EAAKhG,MAAMiG,aACRpB,OAAM,SAAAc,GACe,MAAjBA,EAAMO,OACLb,EAAA,EAAaM,MAAM,CACfJ,QAAS,WACTC,YAAa,8EAGjBd,QAAQC,IAAI,aAAcgB,EAAMQ,MAChCd,EAAA,EAAaM,MAAM,CACfJ,QAAS,WACTC,YAAaG,EAAMJ,SAAW,yBA/B9C,EAAKxC,MAAM,CACPN,KAAK,CACFO,MAAO,IAEVF,SAAS,CACLE,MAAM,KAId,EAAKK,aAAe,EAAKA,aAAanD,KAAlB,gBAXL,E,qDA6Cf,OACI,sBAAKQ,UAAU,kBAAf,UACI,oBAAIA,UAAU,cAAd,uBACA,qBAAKA,UAAU,gBAAf,SACI,oBAAM0F,SAAUhG,KAAKiD,aAAc3C,UAAU,aAA7C,UACI,kBAAMF,KAAN,CAAWiC,KAAK,OAAO4D,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,uCAA1D,SACI,mBACIgB,OAAQ,cAACC,EAAA,EAAD,IACR/C,KAAK,QACLE,YAAY,6BAIpB,kBAAMnD,KAAN,CAAWiC,KAAK,WAAW4D,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,sBAA9D,SACI,mBACIgB,OAAQ,cAACE,EAAA,EAAD,IACRhD,KAAK,QACLO,KAAK,WACLL,YAAY,iBAIhB,mBAAMnD,KAAN,WACI,mBAAQwD,KAAK,UAAUC,SAAS,SAASR,KAAK,QAC9C/C,UAAU,eADV,8BADJ,OAGQ,cAAC,IAAD,CAAMD,GAAG,UAAT,kD,GAvEhBS,a,SCSLwF,EAlBM,SAAC,GAAD,IAAcxF,EAAd,EAAGyF,UAAsBC,EAAzB,EAAyBA,cAAkBC,EAA3C,oDACjB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAA9G,GAAK,OACX4G,EACE,cAAC1F,EAAD,2BAAe2F,GAAU7G,IAEzB,cAAC,IAAD,CACES,GAAI,CACFM,SAAU,SACVgC,MAAO,CAAEgE,KAAM/G,EAAMc,kB,wGC8UnC,SAASkG,EAAahH,GAClB,IAAMiH,EAAY,GAOlB,OANAjH,EAAMkH,SAASC,QAAQC,SAAQ,SAACC,EAAOC,GACnCL,EAAYvB,KAAK,cAAC6B,EAAD,CAAyBF,OAAQA,EAAQG,aAAcF,EACxEG,eAAgBzH,EAAMyH,eACrBC,mBAAoB1H,EAAM0H,oBAFQJ,OAMnC,mBAAM9G,KAAN,CAAWmC,eAAgB3C,EAAMkH,SAASA,SAASvE,eACnDa,KAAMxD,EAAMkH,SAASA,SAAStE,SAAUlC,UAAU,WADlD,UAEI,cAAC,IAAD,CACIiD,YAAa,YAAc3D,EAAMyH,eAAiB,GAClDzG,MAAS,CAAE2G,SAAU,QACrBC,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCrF,KAAO,WACPO,MAAShD,EAAMkH,SAASA,SAASa,KACjClE,SAAU,SAACC,GAAD,OAAS9D,EAAMgI,qBAAqBlE,EAAM9D,EAAMyH,mBAI1DzH,EAAMyH,eAAiB,EACvB,cAACQ,EAAA,EAAD,CACIvH,UAAU,wBACVwD,SAAUlE,EAAMyH,eAAiB,EACjC9G,QAAS,kBAAMX,EAAMkI,eAAelI,EAAMyH,mBACxC,KAGTR,EACD,mBAAMzG,KAAN,CAAYE,UAAU,WAAtB,qCACuB,mBAAOyH,MAAP,CAAatE,SAAU,SAACC,GAAD,OAAS9D,EAAMoI,kBAAkBtE,EAAM9D,EAAMyH,iBAApE,UAEf,mBAAOzE,MAAO,EAAd,mBACA,mBAAOA,MAAO,EAAd,mBACA,mBAAOA,MAAO,EAAd,mBACA,mBAAOA,MAAO,EAAd,4BAYpB,SAASuE,EAAWvH,GAIhB,OACI,kBAAMQ,KAAN,CAAWmC,eAAgB3C,EAAMqH,OAAO1E,eACxCa,KAAMxD,EAAMqH,OAAOzE,SAAUlC,UAAU,WADvC,SAEI,mBACIiD,YAAe,mBAAgB3D,EAAMwH,aAAe,GACpD/D,KAAK,QACLT,MAAOhD,EAAMqH,OAAOU,KACpBlE,SAAU,SAACC,GAAD,OAAW9D,EAAM0H,mBAAmB5D,EAAO9D,EAAMwH,aAAaxH,EAAMyH,qBAY/EY,M,kDApZX,WAAYrI,GAAO,IAAD,8BACd,cAAMA,IAuFVsI,iBAAiB,SAACtF,GACd,OAAoB,IAAjBA,EAAMN,OACE,CACHC,eAAgB,QAChBC,SAAU,2BAEPI,EAAMN,OLpGW,IKqGjB,CACHC,eAAgB,QAChBC,SAAS,0CAAD,OLvGY,IKuGZ,0BAGL,CACHD,eAAgB,UAChBC,SAAU,OAtGJ,EAqIlB2F,iBAAiB,SAACvF,GACd,OAAoB,IAAjBA,EAAMN,OACE,CACHC,eAAgB,QAChBC,SAAU,kBAEPI,EAAMN,OLhJe,IKiJrB,CACHC,eAAgB,QAChBC,SAAS,uCAAD,OLnJgB,IKmJhB,0BAGL,CACHD,eAAgB,UAChBC,SAAU,OAnJJ,EAgLlB4F,eAAe,SAACxF,GACZ,OAAoB,IAAjBA,EAAMN,OACE,CACHC,eAAgB,QAChBC,SAAU,yBAEPI,EAAMN,OL1La,GK2LnB,CACHC,eAAgB,QAChBC,SAAS,+BAAD,OL7Lc,GK6Ld,0BAGL,CACHD,eAAgB,UAChBC,SAAU,OA5LlB,EAAKG,MAAM,CACP0F,KAAK,CACDV,KAAK,IAETW,SAAS,CACLX,KAAK,IAETY,UAAU,CAAC,CACPzB,SAAS,CACLa,KAAK,IAETZ,QAAS,CAAC,CACNY,KAAM,IACP,CACCA,KAAM,IAEV,CACIA,KAAM,IAEV,CACIA,KAAM,KAEVa,cAAc,CACVb,KAAK,OAQrB,EAAKc,iBAAiB,EAAKA,iBAAiB3I,KAAtB,gBACtB,EAAKmD,aAAa,EAAKA,aAAanD,KAAlB,gBAClB,EAAK4I,qBAAqB,EAAKA,qBAAqB5I,KAA1B,gBAC1B,EAAK6I,UAAU,EAAKA,UAAU7I,KAAf,gBACf,EAAKgI,eAAe,EAAKA,eAAehI,KAApB,gBACpB,EAAK8H,qBAAqB,EAAKA,qBAAqB9H,KAA1B,gBAC1B,EAAKwH,mBAAmB,EAAKA,mBAAmBxH,KAAxB,gBACxB,EAAKkI,kBAAkB,EAAKA,kBAAkBlI,KAAvB,gBACvB,EAAKkD,cAAgB,EAAKA,cAAclD,KAAnB,gBAzCH,E,sDA8CR4D,GACN,IAAM6E,EAAYvI,KAAK2C,MAAM4F,UAAUK,QACvC5I,KAAKmE,SAAS,CACVoE,UAAUA,EAAUM,OAAO,CAAC,CACxB/B,SAAS,CACLa,KAAK,IAETZ,QAAS,CAAC,CACNY,KAAM,IACP,CACCA,KAAM,IAEV,CACIA,KAAM,IAEV,CACIA,KAAM,KAEVa,cAAc,CACVb,KAAK,W,qCAKNN,GACX,IAAMkB,EAAYvI,KAAK2C,MAAM4F,UAAUK,QACvC5I,KAAKmE,SAAS,CACVoE,UAAU,GAAD,mBAAKA,EAAUK,MAAM,EAAEvB,IAAvB,YAA0CkB,EAAUK,MAAMvB,EAAe,S,uCAIzE3D,GACb,IAAMd,EAAMc,EAAMO,OAAOrB,MACzB5C,KAAKmE,SAAS,CACVkE,KAAK,aACDV,KAAK/E,GACF5C,KAAKkI,iBAAiBtF,Q,2CAyBhBA,GACjB5C,KAAKmE,SAAS,CACVmE,SAAS,CACLX,KAAK/E,O,2CAKIc,EAAMwD,GAAO,IAAD,OACvBtE,EAAQc,EAAMO,OAAOrB,MAG3B5C,KAAKmE,UAAS,SAACxB,GACX,IAAImG,EAAShE,KAAKiE,MAAMjE,KAAKC,UAAUpC,IAKvC,OAJAmG,EAASP,UAAUrB,GAAOJ,SAASa,KAAK/E,EACxCkG,EAASP,UAAUrB,GAAOJ,SAASvE,eAAe,EAAK4F,iBAAiBvF,GAAOL,eAC/EuG,EAASP,UAAUrB,GAAOJ,SAAStE,SAAS,EAAK2F,iBAAiBvF,GAAOJ,SAElE,CACH+F,UAAUO,EAASP,gB,yCA0BZ7E,EAAMwD,EAAM8B,GAAe,IAAD,OAGnCpG,EAAQc,EAAMO,OAAOrB,MAG3B5C,KAAKmE,UAAS,SAACxB,GACX,IAAImG,EAAShE,KAAKiE,MAAMjE,KAAKC,UAAUpC,IAKvC,OAJAmG,EAASP,UAAUS,GAAejC,QAAQG,GAAOS,KAAK/E,EACtDkG,EAASP,UAAUS,GAAejC,QAAQG,GAAO3E,eAAe,EAAK6F,eAAexF,GAAOL,eAC3FuG,EAASP,UAAUS,GAAejC,QAAQG,GAAO1E,SAAS,EAAK4F,eAAexF,GAAOJ,SAE9E,CACH+F,UAAUO,EAASP,gB,wCA8Bb7E,EAAMwD,GACpB,IAAMtE,EAAQc,EAAMO,OAAOrB,MAErBqG,EAAIjJ,KAAK2C,MAAM4F,UAAUrB,GAAOH,QAAQnE,EAAM,GAAG+E,KACvDrD,QAAQC,IAAI0E,GAEZjJ,KAAKmE,UAAS,SAACxB,GACX,IAAImG,EAAShE,KAAKiE,MAAMjE,KAAKC,UAAUpC,IAGvC,OAFAmG,EAASP,UAAUrB,GAAOsB,cAAcb,KAAKsB,EAEtC,CACHV,UAAUO,EAASP,gB,sCAQ3B,GAAsC,YAAnCvI,KAAK2C,MAAM0F,KAAK9F,eACf,OAAO,EAIX,IAAI,IAAI2G,EAAI,EAAGA,EAAIlJ,KAAK2C,MAAM4F,UAAUjG,OAAQ4G,IAAK,CAEjD,GAA+B,YADdlJ,KAAK2C,MAAM4F,UAAUW,GAAGpC,SAC7BvE,eACR,OAAO,EAGf,IAAI,IAAI2G,EAAI,EAAGA,EAAIlJ,KAAK2C,MAAM4F,UAAUjG,OAAQ4G,IAE5C,IADA,IAAMnC,EAAU/G,KAAK2C,MAAM4F,UAAUW,GAAGnC,QAChCmC,EAAE,EAAEA,EAAEnC,EAAQzE,OAAO4G,IACzB,GAAiC,YAA9BnC,EAAQmC,GAAG3G,eACd,OAAO,I,mCAQNmB,GAAO,IAAD,OACfA,EAAMiB,iBACN,IAAMwE,EAAS,CACXd,KAAKrI,KAAK2C,MAAM0F,KAAKV,KACrBW,SAAStI,KAAK2C,MAAM2F,SAASX,KAC7BY,UAAUvI,KAAK2C,MAAM4F,WAGzBjE,QAAQC,IAAIO,KAAKC,UAAUoE,IJlM5B,SAAoBA,GACvB,OAAOlI,EAAQ,CACXW,IAAK,uCACLyC,OAAQ,OACRQ,KAAMC,KAAKC,UAAUoE,KI+LrBC,CAAWD,GACVtH,MAAK,SAAAC,GACF,EAAKlC,MAAMyF,QAAQC,KAAK,QACzBb,OAAM,SAAAc,GACe,MAAjBA,EAAMO,OACL,EAAKlG,MAAMyJ,eAEXpE,EAAA,EAAaM,MAAM,CACfJ,QAAS,WACTC,YAAaG,EAAMJ,SAAW,wB,+BASrC,IAAD,OACEmE,EAAc,GAOpB,OANAtJ,KAAK2C,MAAM4F,UAAUvB,SAAQ,SAACF,EAASI,GACnCoC,EAAchE,KAAK,cAACsB,EAAD,CAA2BE,SAAUA,EAAUO,eAAgBH,EACjFY,eAAgB,EAAKA,eAAgBF,qBAAsB,EAAKA,qBACjEN,mBAAoB,EAAKA,mBAAoBU,kBAAmB,EAAKA,mBAF9Bd,OAMvC,sBAAK5G,UAAU,qBAAf,UACI,oBAAIA,UAAU,QAAd,uBACA,qBAAKA,UAAU,mBAAf,SACI,oBAAM4C,SAAUlD,KAAKiD,aAAc3C,UAAU,gBAA7C,UACI,kBAAMF,KAAN,CAAWmC,eAAgBvC,KAAK2C,MAAM0F,KAAK9F,eAC3Ca,KAAMpD,KAAK2C,MAAM0F,KAAK7F,SAAUlC,UAAU,WAD1C,SAEI,cAAC,IAAD,CACAiD,YAAY,iCACZ3C,MAAS,CAAE2G,SAAU,QACrBC,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCrF,KAAO,OACPO,MAAS5C,KAAK2C,MAAM0F,KAAKV,KACzBlE,SAAYzD,KAAKyI,qBAErB,mBAAMrI,KAAN,CAAWE,UAAU,WAArB,uBAEc,oBAAQ+B,KAAK,aACvBkH,aAAa,YACb3G,MAAO5C,KAAK2C,MAAM2F,SAASX,KAC3BlE,SAAUzD,KAAK0I,qBACf9H,MAAO,CAAC4I,MAAM,KAJJ,UAKN,kBAAQC,OAAR,CAAe7G,MAAM,YAArB,uBACA,kBAAQ6G,OAAR,CAAe7G,MAAM,aAArB,wBACA,kBAAQ6G,OAAR,CAAe7G,MAAM,WAArB,sBACA,kBAAQ6G,OAAR,CAAe7G,MAAM,WAArB,sBACA,kBAAQ6G,OAAR,CAAe7G,MAAM,QAArB,mBACA,kBAAQ6G,OAAR,CAAe7G,MAAM,oBAArB,+BACA,kBAAQ6G,OAAR,CAAe7G,MAAM,mBAArB,8BACA,kBAAQ6G,OAAR,CAAe7G,MAAM,aAArB,8BAGR,mBAAStC,UAAU,SAClBgJ,EAED,kBAAMlJ,KAAN,CAAWE,UAAU,WAArB,SACI,oBAAQsD,KAAK,SAASrD,QAASP,KAAK2I,UAAW7E,SLvT3C,KKuTqD9D,KAAK2C,MAAM4F,UAAUjG,OAA9E,UACI,cAACoH,EAAA,EAAD,IADJ,sBAMJ,kBAAMtJ,KAAN,CAAWE,UAAU,WAArB,SACI,mBAAQsD,KAAK,UACTC,SAAS,SACTR,KAAK,QACLS,SAAU9D,KAAKgD,gBACfzC,QAASP,KAAKiD,aACd3C,UAAU,qBALd,0C,GA5TNQ,a,kBCNlB6I,G,OAAcC,EAAQ,MAEpBC,E,kDAEF,WAAYjK,GAAQ,IAAD,8BACf,cAAMA,IACD+C,MAAQ,CACTmH,QAAS,IAEb,EAAKC,aAAa,EAAKA,aAAajK,KAAlB,gBALH,E,2DASJ,IAAD,OLsDPmB,EAAQ,CACXW,IAAK,oCACLyC,OAAQ,QKtDPxC,MAAK,SAAAC,GACF,IAAMgI,EAAQ,EAAKnH,MAAMmH,QAAQlB,QACjC,EAAKzE,SAAS,CACV2F,QAAQA,EAAQjB,OAAO/G,EAASqH,eAGrC1E,OAAM,SAAAc,GACLN,EAAA,EAAaM,MAAM,CACfJ,QAAS,WACTC,YAAaG,EAAMJ,SAAW,yB,0CAStCnF,KAAK+J,iB,+BAML,IAAMC,EAAU,GAKhB,OAJAhK,KAAK2C,MAAMmH,QAAQ9C,SAAQ,SAACqB,EAAK4B,GAC7BD,EAAU1E,KAAK,cAAC4E,EAAD,CAA0B7B,KAAMA,GAAjB4B,OAI9B,qBAAK3J,UAAU,oBAAf,SACK0J,Q,GA5CMlJ,aAqDvB,SAASoJ,EAAStK,GACd,OACI,cAAC,IAAD,CAAMS,GAAI,CAACM,SAAS,QAAS0H,KAAKzI,EAAMyI,MAAxC,SACI,sBAAK/H,UAAU,YAAf,UACI,cAAC,IAAD,CAAQA,UAAU,SACdM,MAAO,CAAEuJ,gBAAiBR,KAD9B,SAEI,sBAAMrJ,UAAU,eAAhB,oBAEJ,qBAAIA,UAAU,QAAd,8BACiBV,EAAMyI,KAAKA,QAE5B,qBAAI/H,UAAU,WAAd,uBACeV,EAAMyI,KAAKC,iBAQ3BvH,kBAAW8I,G,OCoB1B,SAASO,EAAaxK,GAClB,OACI,sBAAKU,UAAU,qBAAf,UACI,+BACKV,EAAMyH,eAAe,EAD1B,IAC8BzH,EAAMkH,SAASA,SAASa,QAEtD,8BACI,mBAAQ/D,KAAK,UAAWP,KAAK,QAAQzC,MAAO,CAACuJ,gBAAgBvK,EAAMyK,QAA6B,EAArBzK,EAAMyH,eAAiB,IAC9F9G,QAAS,SAACmD,GAAD,OAAS9D,EAAM0K,YAAY5G,EAAM9D,EAAMyH,eAAe,IAC/D/G,UAAU,sBAFd,SAEqCV,EAAMkH,SAASC,QAAQ,GAAGY,SAEnE,8BACI,mBAAQ/D,KAAK,UAAWP,KAAK,QAAQzC,MAAO,CAACuJ,gBAAgBvK,EAAMyK,QAA6B,EAArBzK,EAAMyH,eAAiB,IAC9F9G,QAAS,SAACmD,GAAD,OAAS9D,EAAM0K,YAAY5G,EAAM9D,EAAMyH,eAAe,IAC/D/G,UAAU,uBAFd,SAEsCV,EAAMkH,SAASC,QAAQ,GAAGY,SAEpE,8BACI,mBAAQ/D,KAAK,UAAWP,KAAK,QAAQzC,MAAO,CAACuJ,gBAAgBvK,EAAMyK,QAA6B,EAArBzK,EAAMyH,eAAiB,IAC9F9G,QAAS,SAACmD,GAAD,OAAS9D,EAAM0K,YAAY5G,EAAM9D,EAAMyH,eAAe,IAC/D/G,UAAU,sBAFd,SAEqCV,EAAMkH,SAASC,QAAQ,GAAGY,SAEnE,8BACI,mBAAQ/D,KAAK,UAAWP,KAAK,QAAQzC,MAAO,CAACuJ,gBAAgBvK,EAAMyK,QAA6B,EAArBzK,EAAMyH,eAAiB,IAC9F9G,QAAS,SAACmD,GAAD,OAAS9D,EAAM0K,YAAY5G,EAAM9D,EAAMyH,eAAe,IAC/D/G,UAAU,uBAFd,SAEsCV,EAAMkH,SAASC,QAAQ,GAAGY,SAEpE,qBAAK4C,GAAI,SAAS3K,EAAMyH,oBAKrBmD,M,kDA7HX,WAAY5K,GAAQ,IAAD,8BACf,cAAMA,IA2DV6K,WAAW,WACP,GAAG,EAAK9H,MAAM+H,aAAa,EAAK/H,MAAM0F,KAAKE,UAAUjG,OAAO,CACxD,IAAMqI,EAAU,qBAAI/J,MAAO,CAACgK,MAAM,QAAQrD,SAAS,QAAnC,2CAA2E,EAAK5E,MAAMkI,aAAtF,MAAuG,EAAKlI,MAAM+H,cAClII,IAASpE,OAAOiE,EAASI,SAASC,eAAe,QACjDD,SAASC,eAAe,OAAOC,mBA9DnC,EAAKtI,MAAQ,CACT0F,KAAK,EAAKzI,MAAMc,SAAS2H,KACzBgC,QAAQ,GACRK,WAAW,EACXG,aAAa,GAGjB,EAAKP,YAAY,EAAKA,YAAYxK,KAAjB,gBATF,E,wDAaP4D,EAAM2D,EAAeD,GAAc,IAAD,OAC1C1D,EAAMiB,iBACN,IAAM0F,EAAQrK,KAAK2C,MAAM0H,QAAQzB,QAGjC,GAAiC,eAA9ByB,EAAuB,EAAfhD,EAAiB,IAAiD,eAA9BgD,EAAuB,EAAfhD,EAAiB,IAC1C,eAA9BgD,EAAuB,EAAfhD,EAAiB,IAAiD,eAA9BgD,EAAuB,EAAfhD,EAAiB,GADrE,CAGA,IAAMqD,EAAW1K,KAAK2C,MAAM+H,WAAW,EAKvC,GAJA1K,KAAKmE,SAAS,CACVuG,WAAWA,GACb1K,KAAKyK,YAEJzK,KAAK2C,MAAM0F,KAAKE,UAAUlB,GAAgBN,QAAQK,GAAcO,OAAO3H,KAAK2C,MAAM0F,KAAKE,UAAUlB,GAAgBmB,cAAcb,KAAK,CACnI,IAAMkD,EAAa7K,KAAK2C,MAAMkI,aAAa,EAC3C7K,KAAKmE,SAAS,CACV0G,aAAaA,IAGjBR,EAAuB,EAAfhD,EAAiBD,GAAc,aACvCpH,KAAKmE,SAAS,CACVkG,QAAQA,IAIZ,IAAMM,EAAU,oBAAI/J,MAAO,CAACgK,MAAM,cAAlB,qBAChBE,IAASpE,OAAOiE,EAASI,SAASC,eAAe,SAAS3D,QAIzD,CAED,IAAI6D,EADJb,EAAuB,EAAfhD,EAAiBD,GAAc,MAEvC8D,EAAqBlL,KAAK2C,MAAM0F,KAAKE,UAAUlB,GAAgBN,QAAQoE,WAAU,SAAAC,GAAG,OAAEA,EAAIzD,OAAO,EAAKhF,MAAM0F,KAAKE,UAAUlB,GAAgBmB,cAAcb,QACzJ0C,EAAuB,EAAfhD,EAAiB6D,GAAsB,aAC/ClL,KAAKmE,SAAS,CACVkG,QAAQA,IAGZ,IAAMM,EAAU,oBAAI/J,MAAO,CAACgK,MAAM,OAAlB,uBAChBE,IAASpE,OAAOiE,EAASI,SAASC,eAAe,SAAS3D,Q,+BAgBzD,IAAD,OACEgE,EAAS,GAMf,OALArL,KAAK2C,MAAM0F,KAAKE,UAAUvB,SAAQ,SAACF,EAASwE,GACxCD,EAAS/F,KAAK,cAAC8E,EAAD,CAAkCtD,SAAUA,EAAUuD,QAAS,EAAK1H,MAAM0H,QACpFhD,eAAgBiE,EAAehB,YAAa,EAAKA,aADpBgB,OAKjC,sBAAKhL,UAAU,iBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,6BACKN,KAAK2C,MAAM0F,KAAKA,OAErB,4CACerI,KAAK2C,MAAM0F,KAAKC,eAG9B+C,EACL,qBAAKd,GAAG,e,GAzFLzJ,aCUbyK,E,kDACJ,WAAY3L,GAAO,IAAD,8BAChB,cAAMA,IACD+C,MAAM,CACTxC,YAAY,KACZqL,iBAAgB,GAIlB,EAAKC,YAAc,EAAKA,YAAY3L,KAAjB,gBACnB,EAAKuJ,aAAe,EAAKA,aAAavJ,KAAlB,gBACpB,EAAK4L,gBAAkB,EAAKA,gBAAgB5L,KAArB,gBAGvBmF,EAAA,EAAa0G,OAAO,CAClBC,UAAU,WACVC,IAAI,IACJC,SAAS,IAhBK,E,0DAqBhB7G,EAAA,EAAaC,QAAQ,CACnBC,QAAS,WACTC,YAAa,4BAEfpF,KAAK0L,kBACL1L,KAAKJ,MAAMyF,QAAQC,KAAK,O,qCAIxBjE,aAAa0K,WAAW/K,GACxBhB,KAAKmE,SAAS,CACZqH,iBAAgB,EAChBrL,YAAY,OAIdH,KAAKJ,MAAMyF,QAAQC,KAAK,KACxBL,EAAA,EAAaC,QAAQ,CACfC,QAAS,WACTC,YAAa,8B,0CAOnBpF,KAAK0L,oB,wCAGY,IAAD,OPtBTzK,EAAQ,CACXW,IAAK,wCACLyC,OAAQ,QOuBXxC,MAAK,SAAAC,GACJwC,QAAQC,IAAIzC,EAASO,MACrB,EAAK8B,SAAS,CACZhE,YAAa2B,EAASO,KACtBmJ,iBAAiB,IAGnBlH,QAAQC,IAAI,gBAAgB,EAAK5B,MAAMxC,gBACtCsE,OAAM,SAAAc,GACP,EAAKpB,SAAS,CACZqH,iBAAiB,S,+BAQd,IAAD,OACN,OACE,eAAC,IAAD,CAAQlL,UAAU,gBAAlB,UACE,cAAC,EAAD,CAAWkL,gBAAiBxL,KAAK2C,MAAM6I,gBACvCrL,YAAaH,KAAK2C,MAAMxC,YACxBF,SAAUD,KAAKqJ,eAGf,cAAC,UAAD,CAAS/I,UAAU,cAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAO0L,OAAK,EAACC,KAAK,IACZvF,OAAQ,SAAC9G,GAAD,OAAW,cAAC,EAAD,eAAeA,OAExC,cAAC,IAAD,CAAOqM,KAAK,QACNvF,OAAQ,SAAC9G,GAAD,OAAW,cAAC,EAAD,eAAWA,OAEpC,cAAC,IAAD,CAAOqM,KAAK,SACNvF,OAAQ,SAAC9G,GAAD,OAAW,cAAC,EAAD,aAAOiG,QAAS,EAAK4F,aAAiB7L,OAC/D,cAAC,IAAD,CAAOqM,KAAK,UAAU1F,UAAWpE,IACjC,cAAC,EAAD,CAAcqE,cAAexG,KAAK2C,MAAM6I,gBAAiBS,KAAK,OAAO1F,UAAW0B,EAASoB,aAAcrJ,KAAKqJ,6B,GA5FtGvI,aA0GHC,cAAWwK,GC9GXW,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvK,MAAK,YAAkD,IAA/CwK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdrB,IAASpE,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFqE,SAASC,eAAe,SAM1BkB,O","file":"static/js/main.d070e2f1.chunk.js","sourcesContent":["\r\nimport { Menu } from \"antd\";\r\nimport { Header } from \"antd/lib/layout/layout\";\r\nimport { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport './AppHeader.css';\r\n\r\n\r\nclass AppHeader extends Component{\r\n    \r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleMenuClick = this.handleMenuClick.bind(this); \r\n\r\n    }\r\n\r\n    handleMenuClick({key}){\r\n        if(key===\"logout\"){\r\n            this.props.onLogout();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let menuItems;\r\n        if(this.props.currentUser){\r\n            menuItems = [\r\n                <Menu.Item key=\"/new\">\r\n                  <Link to=\"/new\">Nowy Quiz</Link>\r\n                </Menu.Item>,\r\n                <Menu.Item key=\"logout\" className=\"logout\">\r\n                  Wyloguj się\r\n                </Menu.Item>, \r\n                <Menu.Item key=\"user\" className=\"user\" >\r\n                    @{this.props.currentUser}\r\n                </Menu.Item>                \r\n              ]; \r\n\r\n        }else{\r\n            menuItems = [\r\n                <Menu.Item key=\"/new\">\r\n                  <Link to=\"/new\">Nowy Quiz</Link>\r\n                </Menu.Item>,\r\n                <Menu.Item key=\"/login\">\r\n                  <Link to=\"/login\">Logowanie</Link>\r\n                </Menu.Item>,\r\n                <Menu.Item key=\"/signup\">\r\n                  <Link to=\"/signup\">Rejestracja</Link>\r\n                </Menu.Item>                  \r\n              ]; \r\n        }\r\n        \r\n           \r\n        \r\n        return(\r\n            <Header className=\"app-header\">\r\n                <div className=\"container\">\r\n                    <div className=\"app-title\" >\r\n                        <Link to=\"/\">Quiz App</Link>\r\n                    </div>\r\n                     <Menu onClick={this.handleMenuClick} className=\"app-menu\"\r\n                        mode=\"horizontal\"\r\n                        selectedKeys={[this.props.location.pathname]}\r\n                        style={{ lineHeight: '64px' }}>\r\n                        {menuItems}\r\n\r\n                    </Menu>\r\n                </div>\r\n\r\n            </Header>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(AppHeader);","export const NAME_MIN_LENGTH=4;\r\nexport const NAME_MAX_LENGTH = 40;\r\nexport const PASSWORD_MIN_LENGTH = 6;\r\nexport const PASSWORD_MAX_LENGTH = 20;\r\n\r\nexport const ACCESS_TOKEN = 'accessToken';\r\n\r\n\r\nexport const QUIZ_NAME_MAX_LENGTH = 140;\r\nexport const QUIZ_QUESTION_MAX_LENGTH = 100;\r\nexport const QUIZ_CHOICE_MAX_LENGTH = 60;\r\nexport const QUIZ_MAX_CHOICES = 40;","import { ACCESS_TOKEN } from '../common/constants';\r\n\r\n\r\n\r\n\r\n\r\nconst request = (options) => {\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n    })\r\n    \r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n    .then(response => \r\n        response.json().then(json => {\r\n            if(!response.ok) {\r\n                return Promise.reject(json);\r\n            }\r\n            return json;\r\n        })\r\n    );\r\n};\r\nexport function signup(signupRequest) {\r\n    return request({\r\n        url: 'http://localhost:8080/api/signup',\r\n        method: 'POST',\r\n        body: JSON.stringify(signupRequest)         \r\n    });\r\n}\r\n\r\nexport function login(loginRequest) {\r\n    return request({\r\n        url: 'http://localhost:8080/api/login',\r\n        method: 'POST',\r\n        body: JSON.stringify(loginRequest)         \r\n    });\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    return request({\r\n        url: 'http://localhost:8080/api/currentuser',\r\n        method: 'GET'             \r\n    });\r\n}\r\n\r\nexport function validatNameAvailability(name) {\r\n    return request({\r\n        url: 'http://localhost:8080/api/username?name='+name,\r\n        method: 'GET'             \r\n    });\r\n}\r\n\r\nexport function validatePasswordAvailability(password) {\r\n    return request({\r\n        url: 'http://localhost:8080/api/userpassword?password='+password,\r\n        method: 'GET'             \r\n    });\r\n}\r\n\r\nexport function createQuiz(quizData) {\r\n    return request({\r\n        url: 'http://localhost:8080/api/createquiz',\r\n        method: 'POST',\r\n        body: JSON.stringify(quizData)         \r\n    });\r\n}\r\n\r\nexport function getQuizzes() {\r\n    return request({\r\n        url: 'http://localhost:8080/api/getquiz',\r\n        method: 'GET'             \r\n    });\r\n}","import { Button, Form, Input, notification } from 'antd';\r\nimport { Component } from \"react\";\r\nimport './Signup.css';\r\nimport { \r\n    NAME_MIN_LENGTH, NAME_MAX_LENGTH, \r\n    PASSWORD_MIN_LENGTH,PASSWORD_MAX_LENGTH\r\n    \r\n} from '../../common/constants';\r\n\r\nimport  {signup, validatNameAvailability,validatePasswordAvailability}  from '../../api/Api';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Signup extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            name:{\r\n               value: ''\r\n            },\r\n            password:{\r\n                value:''\r\n            }\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.checkNameAvailability=this.checkNameAvailability.bind(this);\r\n        this.checkPasswordAvailability=this.checkPasswordAvailability.bind(this);\r\n        this.isFormInvalid = this.isFormInvalid.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n    \r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div className=\"signup-container\">\r\n                <h1 className=\"signup-title\">Rejestracja</h1>\r\n                <div className=\"signup-content\">\r\n                    <Form onSubmit={this.handleSubmit} className=\"signup-form\">\r\n                        <Form.Item \r\n                            label=\"Nazwa użytkownika\"\r\n                            validateStatus={this.state.name.validateStatus}\r\n                            help={this.state.name.errorMsg}>\r\n                             <Input \r\n                                size=\"large\"\r\n                                name=\"name\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"Twoja nazwa użytkownika\"\r\n                                value={this.state.name.value}\r\n                                onBlur={this.checkNameAvailability} \r\n                                onChange={(event) => this.handleInputChange(event, this.validateName)} /> \r\n                        </Form.Item>\r\n                        <Form.Item \r\n                            label=\"Hasło\"\r\n                            validateStatus={this.state.password.validateStatus}\r\n                            help={<label style={{paddingLeft:'85px'}}>{this.state.password.errorMsg}</label>}>\r\n                            <Input \r\n                                size=\"large\"\r\n                                name=\"password\" \r\n                                type=\"password\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"Hasło pomiędzy 6 a 20 znakami\" \r\n                                value={this.state.password.value}\r\n                                onBlur={this.checkPasswordAvailability} \r\n                                onChange={(event) => this.handleInputChange(event, this.validatePassword)} />    \r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" \r\n                                htmlType=\"submit\" \r\n                                size=\"large\" \r\n                                className=\"signup-button\"\r\n                                disabled={this.isFormInvalid()}\r\n                                onClick={this.handleSubmit}\r\n                                >Zarejestruj się</Button>\r\n                                Jesteś zarejestrowany? <Link to=\"/login\">Zaloguj się!</Link>\r\n                        </Form.Item>\r\n                    </Form>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    validateName=(name)=>{\r\n        if(name.length < NAME_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Nazwa za krótka (Minimum ${NAME_MIN_LENGTH} znaków.)`\r\n            };\r\n        } else if (name.length > NAME_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Nazwa za długa (Maximum ${NAME_MAX_LENGTH} znaków.)`\r\n            };\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n              };            \r\n        }\r\n    }\r\n    validatePassword=(password)=>{\r\n        if(password.length < PASSWORD_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Hasło za krótkie (Minimum ${PASSWORD_MIN_LENGTH} znaków.)`\r\n            };\r\n        } else if (password.length > PASSWORD_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Hasło za długie (Maximum ${PASSWORD_MAX_LENGTH} znaków.)`\r\n            };\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n              };            \r\n        }\r\n    }\r\n\r\n    handleInputChange( event,validationInput) {\r\n    \r\n        const inputName = event.target.name;        \r\n        const inputValue = event.target.value;\r\n        this.setState({\r\n            [inputName] : {\r\n                value: inputValue,\r\n                ...validationInput(inputValue)\r\n            }\r\n        });\r\n\r\n    }    \r\n\r\n    checkNameAvailability(){\r\n        const nameValue=this.state.name.value;\r\n        \r\n\r\n        if(this.validateName(nameValue).validateStatus==='error'){\r\n            this.setState({\r\n                name:{\r\n                    value:nameValue,\r\n                    ...this.validateName(nameValue)\r\n                }\r\n            })\r\n            return;\r\n        }\r\n        \r\n\r\n        validatNameAvailability(nameValue)\r\n        .then(response=>{\r\n            console.log(response.isAvailable);\r\n            if(response.isAvailable){\r\n                this.setState({\r\n                    name:{\r\n                        value:nameValue,\r\n                        validateStatus:'success',\r\n                        errorMsg:null\r\n                    }\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    name:{\r\n                        value:nameValue,\r\n                        validateStatus:'error',\r\n                        errorMsg:'Nazwa użytkownika już istnieje'\r\n                    }\r\n                })\r\n            }\r\n            \r\n        }).catch(response=>{\r\n            this.setState({\r\n                name:{\r\n                    value:nameValue,\r\n                    validateStatus:'success',\r\n                    errorMsg:null\r\n                }\r\n            })\r\n        })\r\n\r\n\r\n    }\r\n\r\n    checkPasswordAvailability(){\r\n        const passwordValue=this.state.password.value;\r\n\r\n        if(this.validatePassword(passwordValue).validateStatus==='error'){\r\n            this.setState({\r\n                password:{\r\n                    value:passwordValue,\r\n                    ...this.validatePassword(passwordValue)\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        validatePasswordAvailability(passwordValue)\r\n        .then(response=>{\r\n            if(response.isAvailable){\r\n                this.setState({\r\n                    password:{\r\n                        value:passwordValue,\r\n                        validateStatus:'success',\r\n                        errorMsg:null\r\n                    }\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    password:{\r\n                        value:passwordValue,\r\n                        validateStatus:'error',\r\n                        errorMsg:'Hasło już istnieje'\r\n                    }\r\n                })\r\n            }\r\n            \r\n        }).catch(response=>{\r\n            this.setState({\r\n                password:{\r\n                    value:passwordValue,\r\n                    validateStatus:'success',\r\n                    errorMsg:null\r\n                }\r\n            })\r\n        })\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    isFormInvalid() {\r\n        return !(this.state.name.validateStatus === 'success' &&\r\n            this.state.password.validateStatus === 'success'\r\n        );\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        \r\n        event.preventDefault();\r\n    \r\n        const signupRequest = {\r\n            name: this.state.name.value,\r\n            password: this.state.password.value\r\n        };\r\n        \r\n        signup(signupRequest)\r\n        .then(response => {\r\n            notification.success({\r\n                message: 'Quiz App',\r\n                description: 'Rejestracja przebiegła pomyślnie.Zaloguj się',\r\n            });          \r\n            this.props.history.push(\"/login\");\r\n        }).catch(error => {\r\n            notification.error({\r\n                message: 'Quiz App',\r\n                description: error.message || 'Błąd!Spróbuj ponownie'\r\n            });\r\n        });\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport default Signup;","import { Button, Input,Form, notification } from 'antd';\r\nimport { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Login.css';\r\nimport  {login}  from '../../api/Api';\r\nimport { ACCESS_TOKEN } from '../../common/constants';\r\n\r\nimport { UserAddOutlined,LockOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            name:{\r\n               value: ''\r\n            },\r\n            password:{\r\n                value:''\r\n            }\r\n        }\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n     \r\n    handleSubmit =(values)=>  {\r\n\r\n        //const loginRequest = Object.assign({}, values);\r\n        login(values)\r\n        .then(response => {\r\n            localStorage.setItem(ACCESS_TOKEN, response.accessToken);\r\n            console.log(response.accessToken);\r\n            this.props.onLogin();\r\n            }).catch(error => {\r\n                if(error.status === 401) {\r\n                    notification.error({\r\n                        message: 'Quiz App',\r\n                        description: 'Nazwa uzytkownika lub hasło nieprawidłowe.Spróbuj ponownie!'\r\n                    });                    \r\n                } else {\r\n                    console.log('response: ', error.data);\r\n                    notification.error({\r\n                        message: 'Quiz App',\r\n                        description: error.message || 'Błąd!'\r\n                    });                                            \r\n                }\r\n        });\r\n    }\r\n    \r\n    \r\n\r\n    render() {\r\n        \r\n\r\n        \r\n        return (\r\n            <div className=\"login-container\">\r\n                <h1 className=\"login-title\">Logowanie</h1>\r\n                <div className=\"login-content\">\r\n                    <Form onFinish={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item name=\"name\" rules={[{ required: true, message: 'Wpisz nazwę użytkownika!' }]}>\r\n                            <Input \r\n                                prefix={<UserAddOutlined />}\r\n                                size=\"large\"\r\n                                placeholder=\"Nazwa użytkownika\"\r\n                                />    \r\n                            \r\n                        </Form.Item>\r\n                        <Form.Item name=\"password\" rules={[{ required: true, message: 'Wpisz hasło!' }]}>\r\n                            <Input \r\n                                prefix={<LockOutlined />}\r\n                                size=\"large\"\r\n                                type=\"password\" \r\n                                placeholder=\"Hasło\" \r\n                                />                        \r\n                            \r\n                        </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" size=\"large\"\r\n                                className=\"login-button\">Zaloguj się</Button>\r\n                                lub <Link to=\"/signup\">zarejestruj się!</Link>\r\n                            </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n                          \r\n        );\r\n    }\r\n\r\n      \r\n}\r\n\r\n\r\nexport default Login;","import { Redirect, Route } from \"react-router-dom\";\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        authenticated ? (\r\n          <Component {...rest} {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n);\r\n  \r\nexport default PrivateRoute","\r\nimport { Button, Divider, Form, Input, notification, Radio, Select } from \"antd\";\r\nimport  {CloseOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\nimport { Component } from \"react\";\r\nimport { QUIZ_CHOICE_MAX_LENGTH, QUIZ_MAX_CHOICES, QUIZ_NAME_MAX_LENGTH, QUIZ_QUESTION_MAX_LENGTH } from \"../common/constants\";\r\nimport './NewQuiz.css';  \r\nimport { createQuiz } from \"../api/Api\";\r\n\r\n\r\n\r\nclass NewQuiz extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            quiz:{\r\n                text:''\r\n            },\r\n            category:{\r\n                text:''\r\n            },\r\n            questions:[{\r\n                question:{\r\n                    text:''\r\n                },\r\n                choices: [{\r\n                    text: ''\r\n                }, {\r\n                    text: ''\r\n                },\r\n                {\r\n                    text: ''\r\n                },\r\n                {\r\n                    text: ''\r\n                }],\r\n                correctChoice:{\r\n                    text:''\r\n                }\r\n            }]\r\n            \r\n           \r\n\r\n        }\r\n\r\n    this.handleQuizChange=this.handleQuizChange.bind(this);\r\n    this.handleSubmit=this.handleSubmit.bind(this);\r\n    this.handleCategoryChange=this.handleCategoryChange.bind(this);\r\n    this.addChoice=this.addChoice.bind(this);\r\n    this.removeQuestion=this.removeQuestion.bind(this);\r\n    this.handleQuestionChange=this.handleQuestionChange.bind(this);\r\n    this.handleChoiceChange=this.handleChoiceChange.bind(this);\r\n    this.handleRadioChange=this.handleRadioChange.bind(this);\r\n    this.isFormInvalid = this.isFormInvalid.bind(this);\r\n\r\n\r\n    }\r\n\r\n    addChoice(event){\r\n        const questions = this.state.questions.slice();\r\n        this.setState({\r\n            questions:questions.concat([{\r\n                question:{\r\n                    text:''\r\n                },\r\n                choices: [{\r\n                    text: ''\r\n                }, {\r\n                    text: ''\r\n                },\r\n                {\r\n                    text: ''\r\n                },\r\n                {\r\n                    text: ''\r\n                }],\r\n                correctChoice:{\r\n                    text:''\r\n                }\r\n            }])\r\n        }); \r\n    }\r\n    removeQuestion(questionNumber){\r\n        const questions = this.state.questions.slice();\r\n        this.setState({\r\n            questions:[...questions.slice(0,questionNumber),...questions.slice(questionNumber+1)]\r\n        });\r\n    }\r\n\r\n    handleQuizChange(event){\r\n        const value=event.target.value;\r\n        this.setState({\r\n            quiz:{\r\n                text:value,\r\n                ...this.validateQuizName(value)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    validateQuizName=(value)=>{\r\n        if(value.length === 0) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Wpisz nazwę quizu!'\r\n            }\r\n        } else if (value.length > QUIZ_NAME_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Nazwa quizu za długa (Maksymalnie ${QUIZ_NAME_MAX_LENGTH} znaków dozwolone)`\r\n            }    \r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCategoryChange(value){\r\n        this.setState({\r\n            category:{\r\n                text:value\r\n            }\r\n        });\r\n    }\r\n\r\n    handleQuestionChange(event,index){\r\n        const value = event.target.value;\r\n\r\n\r\n        this.setState((state)=>{\r\n            let newState=JSON.parse(JSON.stringify(state));\r\n            newState.questions[index].question.text=value;\r\n            newState.questions[index].question.validateStatus=this.validateQuestion(value).validateStatus;\r\n            newState.questions[index].question.errorMsg=this.validateQuestion(value).errorMsg;\r\n\r\n            return({\r\n                questions:newState.questions\r\n            });\r\n\r\n        }   \r\n        );\r\n\r\n    }\r\n    validateQuestion=(value)=>{\r\n        if(value.length === 0) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Wpisz pytanie!'\r\n            }\r\n        } else if (value.length > QUIZ_QUESTION_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Pytanie za długie (Maksymalnie ${QUIZ_QUESTION_MAX_LENGTH} znaków dozwolone)`\r\n            }    \r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChoiceChange(event,index,indexQuestion){\r\n        \r\n        \r\n        const value = event.target.value;\r\n\r\n\r\n        this.setState((state)=>{\r\n            let newState=JSON.parse(JSON.stringify(state));\r\n            newState.questions[indexQuestion].choices[index].text=value;\r\n            newState.questions[indexQuestion].choices[index].validateStatus=this.validateChoice(value).validateStatus;\r\n            newState.questions[indexQuestion].choices[index].errorMsg=this.validateChoice(value).errorMsg;\r\n\r\n            return({\r\n                questions:newState.questions\r\n            });\r\n\r\n        }   \r\n        );\r\n    }\r\n\r\n  \r\n  \r\n  \r\n\r\n    validateChoice=(value)=>{\r\n        if(value.length === 0) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Wpisz odpowiedź!'\r\n            }\r\n        } else if (value.length > QUIZ_CHOICE_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Odpowiedź (Maksymalnie ${QUIZ_CHOICE_MAX_LENGTH} znaków dozwolone)`\r\n            }    \r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null\r\n            }\r\n        }\r\n    }\r\n\r\n    handleRadioChange(event,index){\r\n        const value = event.target.value;\r\n        \r\n        const val=this.state.questions[index].choices[value-1].text;\r\n        console.log(val);\r\n\r\n        this.setState((state)=>{\r\n            let newState=JSON.parse(JSON.stringify(state));\r\n            newState.questions[index].correctChoice.text=val;\r\n\r\n            return({\r\n                questions:newState.questions\r\n            });\r\n\r\n        }   \r\n        );\r\n    }\r\n\r\n    isFormInvalid(){\r\n        if(this.state.quiz.validateStatus !== 'success') {\r\n            return true;\r\n        }\r\n        \r\n    \r\n        for(let i = 0; i < this.state.questions.length; i++) {\r\n            const question = this.state.questions[i].question;            \r\n            if(question.validateStatus !== 'success') {\r\n                return true;\r\n            }\r\n        }\r\n        for(let i = 0; i < this.state.questions.length; i++) {\r\n            const choices = this.state.questions[i].choices; \r\n            for(let i=0;i<choices.length;i++) {\r\n                if(choices[i].validateStatus !== 'success') {\r\n                return true;\r\n            }\r\n            }          \r\n            \r\n        }\r\n    } \r\n\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        const quizData={\r\n            quiz:this.state.quiz.text,\r\n            category:this.state.category.text,\r\n            questions:this.state.questions\r\n\r\n        }\r\n        console.log(JSON.stringify(quizData));\r\n        createQuiz(quizData)\r\n        .then(response => {\r\n            this.props.history.push(\"/\");\r\n        }).catch(error => {\r\n            if(error.status === 401) {\r\n                this.props.handleLogout();    \r\n            } else {\r\n                notification.error({\r\n                    message: 'Quiz App',\r\n                    description: error.message || 'Błąd'\r\n                });              \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const questionViews=[];\r\n        this.state.questions.forEach((question,index)=>{\r\n            questionViews.push(<QuizQuestion  key={index} question={question} questionNumber={index}\r\n             removeQuestion={this.removeQuestion} handleQuestionChange={this.handleQuestionChange}\r\n            handleChoiceChange={this.handleChoiceChange} handleRadioChange={this.handleRadioChange} />);\r\n        });\r\n\r\n        return(\r\n            <div className=\"new-quiz-container\">\r\n                <h1 className=\"title\">Nowy Quiz</h1>\r\n                <div className=\"new-quiz-content\">\r\n                    <Form onSubmit={this.handleSubmit} className=\"new-quiz-form\">\r\n                        <Form.Item validateStatus={this.state.quiz.validateStatus}\r\n                        help={this.state.quiz.errorMsg} className=\"form-row\">\r\n                            <TextArea\r\n                            placeholder=\"Wprowadź nazwę quizu\"\r\n                            style = {{ fontSize: '16px' }} \r\n                            autosize={{ minRows: 3, maxRows: 6 }} \r\n                            name = \"quiz\"\r\n                            value = {this.state.quiz.text}\r\n                            onChange = {this.handleQuizChange}/>\r\n                        </Form.Item>\r\n                        <Form.Item className=\"form-row\">\r\n                            \r\n                            Kategoria:<Select name=\"categories\"\r\n                            defaultValue=\"geografia\"\r\n                            value={this.state.category.text}\r\n                            onChange={this.handleCategoryChange}\r\n                            style={{width:150}}>\r\n                                <Select.Option value=\"geografia\">geografia</Select.Option>\r\n                                <Select.Option value=\"język\">język</Select.Option>\r\n                                <Select.Option value=\"historia\">historia</Select.Option>\r\n                                <Select.Option value=\"przyroda\">przyroda</Select.Option>\r\n                                <Select.Option value=\"filmy\">filmy</Select.Option>\r\n                                <Select.Option value=\"książki\">książki</Select.Option>\r\n                                <Select.Option value=\"wiedza ogólna\">wiedza ogólna</Select.Option>\r\n                                <Select.Option value=\"matematyka\">matematyka</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>    \r\n                        <Divider className=\"line\"/>\r\n                        {questionViews}\r\n\r\n                        <Form.Item className=\"form-row\">\r\n                            <Button type=\"dashed\" onClick={this.addChoice} disabled={this.state.questions.length === QUIZ_MAX_CHOICES}>\r\n                                <PlusOutlined /> Dodaj pytanie\r\n                            </Button>\r\n                        </Form.Item>\r\n\r\n                        \r\n                        <Form.Item className=\"form-row\">\r\n                            <Button type=\"primary\" \r\n                                htmlType=\"submit\" \r\n                                size=\"large\" \r\n                                disabled={this.isFormInvalid()}\r\n                                onClick={this.handleSubmit}\r\n                                className=\"create-quiz-button\">Utwórz quiz</Button>\r\n                        </Form.Item>\r\n                       \r\n\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction QuizQuestion(props){\r\n    const choiceViews=[];\r\n    props.question.choices.forEach((choice,index)=>{\r\n        choiceViews.push(<QuizChoice  key={index} choice={choice} choiceNumber={index}\r\n        questionNumber={props.questionNumber}\r\n         handleChoiceChange={props.handleChoiceChange} />);\r\n    });\r\n   \r\n    return(\r\n        <Form.Item validateStatus={props.question.question.validateStatus}\r\n        help={props.question.question.errorMsg} className=\"form-row\">\r\n            <TextArea\r\n                placeholder={'Pytanie ' + (props.questionNumber + 1)}\r\n                style = {{ fontSize: '16px' }} \r\n                autosize={{ minRows: 2, maxRows: 4 }} \r\n                name = \"question\"\r\n                value = {props.question.question.text} \r\n                onChange={(event)=>props.handleQuestionChange(event,props.questionNumber)}/>\r\n            \r\n\r\n            {\r\n                props.questionNumber > 0 ? (\r\n                <CloseOutlined\r\n                    className=\"dynamic-delete-button\"\r\n                    disabled={props.questionNumber < 1}\r\n                    onClick={() => props.removeQuestion(props.questionNumber)}\r\n                /> ): null\r\n            } \r\n            \r\n            {choiceViews}\r\n            <Form.Item  className=\"form-row\">\r\n                Poprawna odpowiedź:<Radio.Group onChange={(event)=>props.handleRadioChange(event,props.questionNumber)} \r\n                >\r\n                    <Radio value={1}>Odp.1</Radio>\r\n                    <Radio value={2}>Odp.2</Radio>\r\n                    <Radio value={3}>Odp.3</Radio>\r\n                    <Radio value={4}>Odp.4</Radio>\r\n                </Radio.Group>\r\n\r\n            </Form.Item>\r\n      \r\n    \r\n        </Form.Item>  \r\n        \r\n\r\n    );\r\n}\r\n\r\nfunction QuizChoice(props){\r\n\r\n    \r\n\r\n    return(\r\n        <Form.Item validateStatus={props.choice.validateStatus}\r\n        help={props.choice.errorMsg} className=\"form-row\">\r\n            <Input \r\n                placeholder = {'Odpowiedź ' + (props.choiceNumber + 1)} \r\n                size=\"large\"\r\n                value={props.choice.text} \r\n                onChange={(event) => props.handleChoiceChange(event, props.choiceNumber,props.questionNumber)} />\r\n\r\n\r\n        </Form.Item>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default NewQuiz;","import { notification } from \"antd\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getQuizzes } from \"../api/Api\";\r\nimport './QuizList.css'\r\n\r\nvar randomColor = require('randomcolor');\r\n\r\nclass QuizList extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quizzes: []\r\n        };\r\n        this.loadQuizList=this.loadQuizList.bind(this);\r\n       \r\n    }\r\n\r\n    loadQuizList(){\r\n        getQuizzes()\r\n        .then(response=>{\r\n            const quizzes=this.state.quizzes.slice();\r\n            this.setState({\r\n                quizzes:quizzes.concat(response.quizData)\r\n\r\n            });\r\n        }).catch(error=>{\r\n            notification.error({\r\n                message: 'Quiz App',\r\n                description: error.message || 'Błąd!'\r\n            });     \r\n        }\r\n\r\n        );\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadQuizList();\r\n    }\r\n\r\n    \r\n    \r\n    render(){\r\n        const quizViews=[];\r\n        this.state.quizzes.forEach((quiz,quizIndex)=>{\r\n            quizViews.push(<QuizView key={quizIndex} quiz={quiz} />);\r\n        });\r\n\r\n        return(\r\n            <div className=\"quizzes-container\">\r\n                {quizViews}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction QuizView(props){\r\n    return(\r\n        <Link to={{pathname:\"/quiz\", quiz:props.quiz}}   >\r\n            <div className=\"quiz-view\">\r\n                <Avatar className=\"avatar\" \r\n                    style={{ backgroundColor: randomColor()}} >\r\n                    <span className=\"avatar-title\">Quiz</span>\r\n                </Avatar>\r\n                <h1 className=\"title\">\r\n                    Tytuł quizu:{props.quiz.quiz}\r\n                </h1>\r\n                <h3 className=\"category\">\r\n                    Kategoria:{props.quiz.category}\r\n\r\n                </h3>\r\n            </div>    \r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default withRouter(QuizList);","import { Button } from \"antd\";\r\nimport { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Quiz.css'\r\n\r\nclass Quiz extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quiz:this.props.location.quiz,\r\n            bgColor:[],\r\n            totalVotes:0,\r\n            correctVotes:0\r\n        };\r\n\r\n        this.handleClick=this.handleClick.bind(this);\r\n        \r\n       \r\n    }\r\n    handleClick(event,questionNumber,choiceNumber){\r\n        event.preventDefault();\r\n        const bgColor=this.state.bgColor.slice();\r\n        \r\n\r\n        if(bgColor[questionNumber*4+0]==='chartreuse'||bgColor[questionNumber*4+1]==='chartreuse'||\r\n        bgColor[questionNumber*4+2]==='chartreuse'||bgColor[questionNumber*4+3]==='chartreuse')return;\r\n\r\n        const totalVotes=this.state.totalVotes+1;\r\n        this.setState({\r\n            totalVotes:totalVotes\r\n        },this.countVotes);\r\n\r\n        if(this.state.quiz.questions[questionNumber].choices[choiceNumber].text===this.state.quiz.questions[questionNumber].correctChoice.text){\r\n            const correctVotes=this.state.correctVotes+1;\r\n            this.setState({\r\n                correctVotes:correctVotes\r\n            });\r\n\r\n            bgColor[questionNumber*4+choiceNumber]='chartreuse';\r\n            this.setState({\r\n                bgColor:bgColor\r\n            });\r\n            \r\n\r\n            const element = <h3 style={{color:'chartreuse'}}>Dobrze!</h3>;\r\n            ReactDOM.render(element, document.getElementById('answer'+questionNumber));\r\n\r\n\r\n            \r\n        }else{\r\n            bgColor[questionNumber*4+choiceNumber]='red';\r\n            var indexOfCorrectChoice;\r\n            indexOfCorrectChoice=this.state.quiz.questions[questionNumber].choices.findIndex(obj=>obj.text===this.state.quiz.questions[questionNumber].correctChoice.text)\r\n            bgColor[questionNumber*4+indexOfCorrectChoice]='chartreuse';\r\n            this.setState({\r\n                bgColor:bgColor\r\n            });\r\n\r\n            const element = <h3 style={{color:'red'}}>Źle!</h3>;\r\n            ReactDOM.render(element, document.getElementById('answer'+questionNumber));\r\n        }\r\n        \r\n\r\n        \r\n    }\r\n\r\n    countVotes=()=>{\r\n        if(this.state.totalVotes===this.state.quiz.questions.length){\r\n            const element = <h1 style={{color:'green',fontSize:'24px'}}>Liczba poprawnych odpowiedzi: {this.state.correctVotes} z {this.state.totalVotes}</h1>;\r\n            ReactDOM.render(element, document.getElementById('end'));\r\n            document.getElementById('end').scrollIntoView();\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const quizView=[];\r\n        this.state.quiz.questions.forEach((question,questionIndex)=>{\r\n            quizView.push(<QuestionView key={questionIndex} question={question} bgColor={this.state.bgColor}\r\n                questionNumber={questionIndex} handleClick={this.handleClick} />);\r\n        });\r\n\r\n        return(\r\n            <div className=\"quiz-container\">\r\n                <div className=\"quiz-title\">\r\n                    <h1 >\r\n                        {this.state.quiz.quiz}\r\n                    </h1>\r\n                    <h3 >\r\n                        Kategoria:{this.state.quiz.category}\r\n                    </h3>\r\n                </div>    \r\n                    {quizView}\r\n                <div id=\"end\"></div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction QuestionView(props){\r\n    return(\r\n        <div className=\"question-container\">\r\n            <h3>\r\n                {props.questionNumber+1}.{props.question.question.text}\r\n            </h3>\r\n            <div>\r\n                <Button type=\"default\"  size=\"large\" style={{backgroundColor:props.bgColor[props.questionNumber*4+0]}}\r\n                    onClick={(event)=>props.handleClick(event,props.questionNumber,0)} \r\n                    className=\"first-choice-button\">{props.question.choices[0].text}</Button>\r\n            </div>\r\n            <div>\r\n                <Button type=\"default\"  size=\"large\" style={{backgroundColor:props.bgColor[props.questionNumber*4+1]}}\r\n                    onClick={(event)=>props.handleClick(event,props.questionNumber,1)} \r\n                    className=\"second-choice-button\">{props.question.choices[1].text}</Button>\r\n            </div>\r\n            <div>\r\n                <Button type=\"default\"  size=\"large\" style={{backgroundColor:props.bgColor[props.questionNumber*4+2]}}\r\n                    onClick={(event)=>props.handleClick(event,props.questionNumber,2)} \r\n                    className=\"third-choice-button\">{props.question.choices[2].text}</Button>\r\n            </div>\r\n            <div>\r\n                <Button type=\"default\"  size=\"large\" style={{backgroundColor:props.bgColor[props.questionNumber*4+3]}}\r\n                    onClick={(event)=>props.handleClick(event,props.questionNumber,3)} \r\n                    className=\"fourth-choice-button\">{props.question.choices[3].text}</Button>\r\n            </div>\r\n            <div id={'answer'+props.questionNumber}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;","import { notification } from 'antd';\nimport Layout, { Content } from 'antd/lib/layout/layout';\nimport { Component } from 'react';\nimport {  Route, Switch, withRouter } from 'react-router-dom';\nimport './App.css';\nimport '../common/AppHeader';\nimport Signup from '../user/signup/Signup';\nimport AppHeader from '../common/AppHeader';\nimport Login from '../user/login/Login';\nimport  {getCurrentUser}  from '../api/Api';\nimport { ACCESS_TOKEN } from '../common/constants';\nimport PrivateRoute from '../common/PrivateRoute';\nimport NewQuiz from '../quiz/NewQuiz';\nimport QuizList from '../quiz/QuizList';\nimport Quiz from '../quiz/Quiz';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      currentUser:null,\n      isAuthenticated:false,\n      \n   }\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    \n\n    notification.config({\n      placement:'topRight',\n      top:100,\n      duration:4\n    })\n  }\n\n  handleLogin() {\n    notification.success({\n      message: 'Quiz App',\n      description: \"Jesteś zalogowany.\",\n    });\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  handleLogout() {\n    localStorage.removeItem(ACCESS_TOKEN)\n    this.setState({\n      isAuthenticated:false,\n      currentUser:null\n\n    })\n\n    this.props.history.push(\"/\");\n    notification.success({\n          message: 'Quiz App',\n          description: \"Jesteś wylogowany.\",\n    });\n\n  }\n\n\n  componentDidMount(){\n    this.loadCurrentUser();\n  }\n\n  loadCurrentUser() {\n    \n    getCurrentUser()\n    .then(response => {\n      console.log(response.name);\n      this.setState({\n        currentUser: response.name,\n        isAuthenticated: true,\n        \n      });\n      console.log(\"currentUser: \"+this.state.currentUser);\n    }).catch(error => {\n      this.setState({\n        isAuthenticated: false \n      });\n\n    });\n  }\n  \n\n\n  render(){\n    return(\n      <Layout className=\"app-container\">\n        <AppHeader isAuthenticated={this.state.isAuthenticated}\n        currentUser={this.state.currentUser}\n        onLogout={this.handleLogout}/>\n\n\n        <Content className=\"app-content\">\n          <div className=\"container\">\n            <Switch>\n            <Route exact path=\"/\" \n                  render={(props) => <QuizList  {...props} />}>\n            </Route>\n            <Route path=\"/quiz\" \n                  render={(props) => <Quiz  {...props} />}></Route>\n\n            <Route path=\"/login\" \n                  render={(props) => <Login onLogin={this.handleLogin} {...props} />}></Route>\n            <Route path=\"/signup\" component={Signup}></Route>\n            <PrivateRoute authenticated={this.state.isAuthenticated} path=\"/new\" component={NewQuiz} handleLogout={this.handleLogout}></PrivateRoute>\n              \n            </Switch>\n          </div>\n        </Content>\n\n      </Layout>\n\n\n    );\n  }\n\n}\n\nexport default withRouter(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}